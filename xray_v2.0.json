{
  "openapi": "3.0.3",
  "info": {
    "title": "Xray_REST_API_v2.0",
    "version": "1.0.0",
    "description": "This OpenAPI specification describes the Xray REST API v2.0 for Xray Server and Data Center (DC).",
    "contact": {}
  },
  "servers": [
    {
      "url": "https://your-jira-instance.example.com"
    }
  ],
  "paths": {
    "/rest/raven/2.0/api/test/{testKey}/steps": {
      "get": {
        "tags": [
          "test step"
        ],
        "summary": "List test steps",
        "description": "Returns all the steps of a test issue given the key. The response contains for each step the corresponding id, index, fields and the attachments. <br /> <br /> The Test Step fields are identified by their name and can be of type _Data_ (Toggle, Number, Date and Date Time fields), _Option_ (Single Select, Multiple Select and Radio Button fields), _Wiki_ (Native fields, Single and Multiple Line fields). <br /> <br /> The value of step fields of type _Wiki_ have a raw and rendered value. _Option_ fields value will be an array containing the information of the selected options (the option id and its value).",
        "operationId": "listTestSteps",
        "responses": {
          "200": {
            "description": "Successfully retrieved all test steps. Returns an array of step objects, each containing step ID, index position, custom field values (Action, Data, Expected Result, etc.), and associated attachments. Each step includes both raw and rendered values for Wiki-type fields, and option details for select-type custom fields."
          }
        }
      },
      "post": {
        "tags": [
          "test step"
        ],
        "summary": "Create test step",
        "description": "Create a new test step. All step fields values are listed under _fields_ and identified by the name and a list of attachments to add to the step. The field values should follow a certain format according to the custom field type. <br /><br /> - **Toggle Fields** values should be _\"true\"_, _\"false\"_, _\"0\"_ or _\"1\"_ <br /><br /> - **Number Fields** values should be a string containing a number, e.g. _\"320\"_. Decimal Number are also accepted,for instance, \"320.5\". The decimal places are always separated by a _\".\"_ <br /> <br /> - **Single Select and Radio Button Fields** values should be a single string containing the option value, e.g. _\"Option A\"_. The value should be a valid option for that custom field. The values are not case sensitive. <br /><br /> - **Multiple Select Fields** values should be an array of the string of option values, e.g. _[\"Option A\", \"Option B\"]_. All the selected values should be valid for that custom field. The option values are not case sensitive. <br /><br /> - **Date Fields** should follow the ISO format _yyyy-MM-dd_, where _yyyy_ represents the year, _MM_ the month in year and _dd_ the day in the month. For instance, a valid value would be _\"2020-05-02\"_. <br /><br /> - **Date Time fields** should be in UTC following the ISO format _yyyy-MM-dd'T'HH:mm'Z'_. The date part follows the same date format, while _HH_ represents the hours (0-24), _mm_ the minutes in hour and _Z_ indicates the hour in UTC. For instance, a valid date time value would be _\"2020-05-02T10:30Z\"_. <br /><br />\nThe remaining field types values do not required a specific validation. For instance, for a Single Line Custom field a valid value would be _\"Perform Action B\"_. <br /><br /> If some value is not valid for a certain custom field type, an error will be return stating the field with the incorrect value. Furthermore, **all required step fields must be provided**.",
        "operationId": "createTestStep",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "attachments": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "contentType": {
                          "type": "string",
                          "example": "text/plain"
                        },
                        "data": {
                          "type": "string",
                          "example": "ZHVtbXkgY29udGVudA=="
                        },
                        "filename": {
                          "type": "string",
                          "example": "dummy.txt"
                        }
                      }
                    },
                    "example": [
                      {
                        "contentType": "text/plain",
                        "data": "ZHVtbXkgY29udGVudA==",
                        "filename": "dummy.txt"
                      }
                    ]
                  },
                  "fields": {
                    "type": "object",
                    "properties": {
                      "Action": {
                        "type": "string",
                        "example": "example step5"
                      },
                      "Data": {
                        "type": "string",
                        "example": "example data5"
                      },
                      "Expected Result": {
                        "type": "string",
                        "example": "example result5"
                      }
                    }
                  }
                }
              },
              "examples": {
                "add a step, with an attachment": {
                  "value": {
                    "attachments": [
                      {
                        "contentType": "text/plain",
                        "data": "ZHVtbXkgY29udGVudA==",
                        "filename": "dummy.txt"
                      }
                    ],
                    "fields": {
                      "Action": "example step5",
                      "Data": "example data5",
                      "Expected Result": "example result5"
                    }
                  }
                },
                "create a new test step": {
                  "value": {
                    "attachments": [
                      {
                        "contentType": "text/plain",
                        "data": "ZHVtbXkgY29udGVudA==",
                        "filename": "dummy.txt"
                      }
                    ],
                    "fields": {
                      "Data": "<p>input Data X</p>",
                      "Expected Result": "<p>Expected result X</p>",
                      "action": "<p>Step 1X/p>"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Test step successfully created. Returns the newly created step object including its unique step ID, assigned index position within the test, populated field values, and any attached files. The response includes validation confirmations for all custom field types and attachment processing status."
          }
        }
      },
      "parameters": [
        {
          "name": "testKey",
          "in": "path",
          "required": true,
          "description": "The key of the test issue",
          "schema": {
            "type": "string",
            "example": "TEST-123"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/test/{testKey}/steps/{stepId}": {
      "get": {
        "tags": ["test step"],
        "summary": "Get test step",
        "description": "Returns the values of a single test step, given the test key and the step id. The response follows the same format as the previous endpoints, containing the step id, index, fields and the attachments. <br /> <br /> The Test Step fields are identified by their name and can be of type _Data_ (Toggle, Number, Date and Date Time fields), _Option_ (Single Select, Multiple Select and Radio Button fields), _Wiki_ (Native fields, Single and Multiple Line fields). <br /> <br /> The value of step fields of type _Wiki_ have a raw and rendered value. _Option_ fields value will be an array containing the information of the selected options (the option id and its value).",
        "operationId": "getTestStep",
        "responses": {
          "200": {
            "description": "Test step details successfully retrieved. Returns the specific test step including its ID, index position, custom field values (Action, Data, Expected Result), and any attached files. Response includes both raw and rendered values for Wiki-type fields and option details for select-type fields."
          }
        }
      },
      "put": {
        "tags": ["test step"],
        "summary": "Update test step",
        "description": "Updates the values of an existing test step, given the test key and step id. The user can update the field values and the attachments of a step. The values should follow a specific format similar to the step creation. <br/><br/> - **Toggle Fields** values should be _\"true\"_, _\"false\"_, _\"0\"_ or _\"1\"_ <br /><br /> - **Number Fields** values should be a string containing a number, e.g. _\"320\"_. Decimal Number are also accepted,for instance, \"320.5\". The decimal places are always separated by a _\".\"_ <br /> <br /> - **Single Select and Radio Button Fields** values should be a single string containing the option value, e.g. _\"Option A\"_. The value should be a valid option for that custom field. The values are not case sensitive. <br /><br /> - **Multiple Select Fields** values should be an array of the string of option values, e.g. _[\"Option A\", \"Option B\"]_. All the selected values should be valid for that custom field. The option values are not case sensitive. <br /><br /> - **Date Fields** should follow the ISO format _yyyy-MM-dd_, where _yyyy_ represents the year, _MM_ the month in year and _dd_ the day in the month. For instance, a valid value would be _\"2020-05-02\"_. <br /><br /> - **Date Time fields** should be in UTC following the ISO format _yyyy-MM-dd'T'HH:mm'Z'_. The date part follows the same date format, while _HH_ represents the hours (0-24), _mm_ the minutes in hour and _Z_ indicates the hour in UTC. For instance, a valid date time value would be _\"2020-05-02T10:30Z\"_. <br /><br />\nThe remaining field types values do not required a specific validation. For instance, for a Single Line Custom field a valid value would be _\"Perform Action B\"_. <br /><br /> If some value is not valid for a certain custom field type, an error will be return stating the field with the incorrect value. A field value can be deleted sending an empty value, such as _\"\"_ or _[]_, or by sending _null_. **It is not possible to delete the value of a required field.**",
        "operationId": "updateTestStep",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "attachments": {
                    "type": "object",
                    "properties": {
                      "add": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "contentType": {"type": "string", "example": "text/plain"},
                            "data": {"type": "string", "example": "ZHVtbXkgY29udGVudA=="},
                            "filename": {"type": "string", "example": "dummy.txt"}
                          }
                        },
                        "example": [{"contentType": "text/plain", "data": "ZHVtbXkgY29udGVudA==", "filename": "dummy.txt"}]
                      }
                    }
                  },
                  "fields": {
                    "type": "object",
                    "properties": {
                      "Action": {"type": "string", "example": "example step5x"},
                      "Data": {"type": "string", "example": "example data5x"},
                      "Expected Result": {"type": "string", "example": "example result5x"}
                    }
                  }
                }
              },
              "examples": {
                "modify a step": {
                  "value": {
                    "attachments": {"add": [{"contentType": "text/plain", "data": "ZHVtbXkgY29udGVudA==", "filename": "dummy.txt"}]},
                    "fields": {"Action": "example step5x", "Data": "example data5x", "Expected Result": "example result5x"}
                  }
                },
                "update test step values": {
                  "value": {
                    "attachments": {"add": [{"contentType": "text/plain", "data": "ZHVtbXkgY29udGVudA==", "filename": "dummy.txt"}]},
                    "fields": {"Action": "example step5x", "Data": "example data5x", "Expected Result": "example result5x"}
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Test step successfully updated. Returns the updated test step with new field values, updated attachments, and confirmation of all changes applied."}
        }
      },
      "delete": {
        "tags": ["test step"],
        "summary": "Delete test step",
        "description": "Deletes a test step given the test key and the step id.",
        "operationId": "deleteTestStep",
        "requestBody": {
          "content": {
            "text/plain": {
              "examples": {"delete a step, by id": {"value": ""}}
            }
          }
        },
        "responses": {"200": {"description": "Test step successfully deleted. The specified test step has been removed from the test issue and all associated attachments have been cleaned up."}}
      },
      "parameters": [
        {"name": "testKey", "in": "path", "required": true, "description": "The key of the test issue", "schema": {"type": "string", "example": "TEST-123"}},
        {"name": "stepId", "in": "path", "required": true, "description": "The unique identifier of the test step", "schema": {"type": "string", "example": "67890"}}
      ]
    },
    "/rest/raven/2.0/api/test/{testKey}/steps/{stepId}/attachments": {
      "get": {
        "tags": [
          "test step"
        ],
        "summary": "List test step attachments",
        "description": "Returns all the attachments of a test step, given the test key and step id.",
        "operationId": "listTestStepAttachments",
        "responses": {
          "200": {
            "description": "Test step attachments successfully retrieved. Returns a list of all attachments associated with the specified test step, including attachment IDs, filenames, content types, and metadata."
          }
        }
      },
        "parameters": [
          {
            "name": "testKey",
            "in": "path",
            "required": true,
            "description": "The key of the test issue",
            "schema": {
              "type": "string",
              "example": "TEST-123"
            }
          },
          {
            "name": "stepId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the test step",
            "schema": {
              "type": "string",
              "example": "67890"
            }
          }
        ]
    },
    "/rest/raven/2.0/api/test/{testKey}/steps/{stepId}/attachment/{attachmentId}": {
      "delete": {
        "tags": [
          "test step"
        ],
        "summary": "Delete test step attachment",
        "description": "Deletes a test step attachment, given the test key and step and attachment ids.",
        "operationId": "deleteTestStepAttachment",
        "requestBody": {
          "content": {
            "text/plain": {
              "examples": {
                "delete a step attachment, by id": {
                  "value": ""
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Test step attachment successfully deleted. The specified attachment has been removed from the test step."
          }
        }
      },
        "parameters": [
          {
            "name": "testKey",
            "in": "path",
            "required": true,
            "description": "The key of the test issue",
            "schema": {
              "type": "string",
              "example": "TEST-123"
            }
          },
          {
            "name": "stepId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the test step",
            "schema": {
              "type": "string",
              "example": "67890"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the test step attachment",
            "schema": {
              "type": "string",
              "example": "54321"
            }
          }
        ]
    },
    "/rest/raven/2.0/api/test": {
      "get": {
        "tags": [
          "test"
        ],
        "summary": "List tests",
        "description": "List tests",
        "operationId": "listTests",
        "parameters": [
          {
            "name": "keys",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "TEST-123;TEST-456;TEST-789"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tests successfully exported. Returns detailed information about the specified test issues including their fields, steps, preconditions, and associated metadata."
          }
        }
      }
    },
    "/rest/raven/2.0/api/test/{testKey}/testruns": {
      "get": {
        "tags": [
          "test"
        ],
        "summary": "List test runs for test",
        "description": "List test runs for the specified test",
        "operationId": "listTestRunsForTest",
        "responses": {
          "200": {
            "description": "Test runs successfully exported. Returns a collection of test runs for the specified test, including execution status, timestamps, assignees, and results."
          }
        }
      },
      "parameters": [
        {
          "name": "testKey",
          "in": "path",
          "required": true,
          "description": "The key of the test issue",
          "schema": {
            "type": "string",
            "example": "TEST-123"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/test/{testKey}/testexecutions": {
      "get": {
        "tags": [
          "test"
        ],
        "summary": "List test executions",
        "description": "List test executions",
        "operationId": "listTestExecutions",
        "responses": {
          "200": {
            "description": "Test executions successfully exported. Returns a collection of test executions that include the specified test, with execution details and associated test runs."
          }
        }
      },
      "parameters": [
        {
          "name": "testKey",
          "in": "path",
          "required": true,
          "description": "The key of the test issue",
          "schema": {
            "type": "string",
            "example": "TEST-123"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/precondition/{preconditionKey}/test": {
      "get": {
        "tags": [
          "precondition"
        ],
        "summary": "List precondition tests",
        "description": "List tests associated to precondition",
        "operationId": "listPreconditionTests",
        "responses": {
          "200": {
            "description": "Precondition tests successfully retrieved. Returns a list of all test issues associated with the specified precondition, including test details and association metadata."
          }
        }
      },
      "post": {
        "tags": [
          "precondition"
        ],
        "summary": "Update precondition tests",
        "description": "associate test to a precondition",
        "operationId": "associateTestToPrecondition",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "remove": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "TEST-123"
                    },
                    "example": [
                      "TEST-123"
                    ]
                  }
                }
              },
              "examples": {
                "associate test to a precondition": {
                  "value": {
                    "add": [
                      "TEST-123"
                    ]
                  }
                },
                "disassociate test from a precondition": {
                  "value": {
                    "remove": [
                      "TEST-123"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Test association operation completed successfully. The specified test has been associated with or removed from the precondition as requested."
          }
        }
      },
      "parameters": [
        {
          "name": "preconditionKey",
          "in": "path",
          "required": true,
          "description": "The key of the precondition issue",
          "schema": {
            "type": "string",
            "example": "PRECOND-123"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/test/{testKey}/preconditions": {
      "get": {
        "tags": [
          "test"
        ],
        "summary": "List test preconditions",
        "description": "List test preconditions for the specified test.",
        "operationId": "listTestPreconditions",
        "responses": {
          "200": {
            "description": "Test preconditions successfully exported. Returns a list of all precondition issues associated with the specified test."
          }
        }
      },
      "parameters": [
        {
          "name": "testKey",
          "in": "path",
          "required": true,
          "description": "The key of the test issue",
          "schema": {
            "type": "string",
            "example": "TEST-123"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/testset/{testSetKey}/test": {
      "get": {
        "tags": [
          "test set"
        ],
        "summary": "List test set tests",
        "description": "get tests associated to test set",
        "operationId": "listTestSetTests",
        "responses": {
          "200": {
            "description": "Test set tests successfully retrieved. Returns a list of all test issues associated with the specified test set."
          }
        }
      },
      "post": {
        "tags": [
          "test set"
        ],
        "summary": "Update test set tests",
        "description": "associate test to test set",
        "operationId": "associateTestToTestSet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "remove": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "TEST-123"
                    },
                    "example": [
                      "TEST-123"
                    ]
                  }
                }
              },
              "examples": {
                "associate test to test set": {
                  "value": {
                    "add": [
                      "TEST-123"
                    ]
                  }
                },
                "disassociate test from a test set": {
                  "value": {
                    "remove": [
                      "TEST-123"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Test set association operation completed successfully. The specified test has been associated with or removed from the test set as requested."
          }
        }
      },
      "parameters": [
        {
          "name": "testSetKey",
          "in": "path",
          "required": true,
          "description": "The key of the test set issue",
          "schema": {
            "type": "string",
            "example": "TESTSET-123"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/test/{testKey}/testsets": {
      "get": {
        "tags": [
          "test"
        ],
        "summary": "List test sets",
        "description": "List test sets for the specified test.",
        "operationId": "listTestTestSets",
        "responses": {
          "200": {
            "description": "Test sets successfully exported. Returns a list of all test set issues that include the specified test."
          }
        }
      },
      "parameters": [
        {
          "name": "testKey",
          "in": "path",
          "required": true,
          "description": "The key of the test issue",
          "schema": {
            "type": "string",
            "example": "TEST-123"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/testexec/{testExecutionKey}/test": {
      "get": {
        "tags": [
          "test execution"
        ],
        "summary": "List test execution tests",
        "description": "get tests associated to test execution",
        "operationId": "listTestExecutionTests",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "test execution"
        ],
        "summary": "Update test execution tests",
        "description": "associate test to a test execution",
        "operationId": "associateTestToTestExecution",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "remove": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "TEST-456"
                    },
                    "example": [
                      "TEST-456"
                    ]
                  }
                }
              },
              "examples": {
                "associate test to a test execution": {
                  "value": {
                    "add": [
                      "TEST-456"
                    ]
                  }
                },
                "disassociate test from a test execution": {
                  "value": {
                    "remove": [
                      "TEST-456"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "name": "testExecutionKey",
          "in": "path",
          "required": true,
          "description": "The key of the test execution issue",
          "schema": {
            "type": "string",
            "example": "EXEC-123"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/testrun": {
      "get": {
        "tags": [
          "test run"
        ],
        "summary": "Get test run by keys",
        "description": "Retrieves a Test Run given the Test Execution and Test keys. <br/> The response will contain all information related to a Test Run, e.g., status, created and finish dates, step results, test environments, defects, Test Run Custom fields, and so on. <br/>",
        "operationId": "getTestRunByKeys",
        "parameters": [
          {
            "name": "testExecIssueKey",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "EXEC-123"
            },
            "description": "(Required) The key of the Test Execution"
          },
          {
            "name": "testIssueKey",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "TEST-123"
            },
            "description": "(Required) The key of the Test"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/rest/raven/2.0/api/testrun/{testRunId}": {
      "get": {
        "tags": [
          "test run"
        ],
        "summary": "Get test run",
        "description": "Retrieves a Test Run given the Test Run id. <br/> The response will contain all information related to a Test Run, e.g., status, created and finish dates, step results, test environments, defects, Test Run Custom fields, and so on. <br/>",
        "operationId": "getTestRun",
        "responses": {
          "200": {
            "description": "Test Run details successfully retrieved. Returns comprehensive Test Run information including execution status (TODO, EXECUTING, PASS, FAIL, ABORTED), start/finish timestamps, assignee, test environments, defect associations, step-by-step results with evidence attachments, custom field values, and execution duration metrics."
          }
        }
      },
      "put": {
        "tags": [
          "test run"
        ],
        "summary": "Update test run",
        "description": "Update all the values of a Test Run.<br/> The user can update the values of the overall status, step results, assignee, test environments, add defects and evidences and so on. <br/> <br/> To update the value of a Test Run custom field, the id of the field must be provided as well as a valid value for that custom field type. <br/><br/> - **Toggle Fields** values should be _\"true\"_, _\"false\"_, _\"0\"_ or _\"1\"_ <br /><br /> - **Number Fields** values should be a string containing a number, e.g. _\"320\"_. Decimal Number are also accepted,for instance, \"320.5\". The decimal places are always separated by a _\".\"_  <br /> <br /> - **Single Select and Radio Button Fields** values should be a single string containing the option value, e.g. _\"Option A\"_. The value should be a valid option for that custom field. The values are not case sensitive. <br /><br /> - **Multiple Select Fields** values should be an array of the string of option values, e.g. _[\"Option A\", \"Option B\"]_. All the selected values should be valid for that custom field. The option values are not case sensitive. <br /><br /> - **Date Fields** should follow the ISO format _yyyy-MM-dd_, where _yyyy_ represents the year, _MM_ the month in year and _dd_ the day in the month. For instance, a valid value would be _\"2020-05-02\"_. <br /><br /> - **Date Time fields** should be in UTC following the ISO format _yyyy-MM-dd'T'HH:mm'Z'_. The date part follows the same date format, while _HH_ represents the hours (0-24), _mm_ the minutes in hour and _Z_ indicates the hour in UTC. For instance, a valid date time value would be _\"2020-05-02T10:30Z\"_. <br /><br />\nAn error will be returned when there are invalid custom field values.\nIt is also possible to delete a Test Run custom field value by providing a _null_ or empty value (e.g., _\"\"_ or _[]_). **It is not possible to delete a value of a required Test Run Custom Field value.** <br/> Also, **it is not possible to change the Test Run to a final status when there are required Test Run custom fields with empty values.**",
        "operationId": "updateTestRun",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "example": "failed"
                  },
                  "status": {
                    "type": "string",
                    "example": "FAIL"
                  }
                }
              },
              "examples": {
                "/testrun/:id": {
                  "value": {
                    "comment": "failed",
                    "status": "FAIL"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "name": "testRunId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "10003"
          },
          "description": "(Required) The id of the Test Run"
        }
      ]
    },
    "/rest/raven/2.0/api/testrun/{testRunId}/status": {
      "get": {
        "tags": [
          "test run"
        ],
        "summary": "Get test run status",
        "description": "Get test run status",
        "operationId": "getTestRunStatus",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "test run"
        ],
        "summary": "Update test run status",
        "description": "Updates the overall execution status of a specific Test Run. Valid status values include TODO (not started), EXECUTING (in progress), PASS (successful), FAIL (failed), ABORTED (terminated), and any custom statuses configured in Xray. This operation automatically updates finish timestamp for final statuses and triggers status-dependent workflows.",
        "operationId": "updateTestRunStatus",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "FAIL"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Test Run status successfully updated. Returns confirmation of the status change with updated timestamp information. The response includes the new status value and any triggered workflow transitions or notifications."
          }
        }
      },
      "parameters": [
        {
          "name": "testRunId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the test run",
          "schema": {
            "type": "string",
            "example": "10001"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/testrun/{testRunId}/defect": {
      "get": {
        "tags": [
          "test run"
        ],
        "summary": "List test run defects",
        "description": "get test run defects",
        "operationId": "getTestRunDefects",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contentType": {
                    "type": "string",
                    "example": "text/plain"
                  },
                  "data": {
                    "type": "string",
                    "example": "ZHVtbXkgY29udGVudA=="
                  },
                  "filename": {
                    "type": "string",
                    "example": "dummy.txt"
                  }
                }
              },
              "examples": {
                "get test run defects": {
                  "value": {
                    "contentType": "text/plain",
                    "data": "ZHVtbXkgY29udGVudA==",
                    "filename": "dummy.txt"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "test run"
        ],
        "summary": "Link defects to test run",
        "description": "Associates one or more defect issues (bugs, issues) with a specific Test Run. This creates bidirectional traceability links between failed test executions and their related defects, enabling comprehensive defect tracking and test coverage analysis. Defects can be existing Jira issues or newly created ones.",
        "operationId": "linkDefectsToTestRun",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "DEFECT-789"
                },
                "example": [
                  "DEFECT-789"
                ]
              },
              "examples": {
                "add/link defects to test run": {
                  "value": [
                    "DEFECT-789"
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "name": "testRunId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the test run",
          "schema": {
            "type": "string",
            "example": "10001"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/testrun/{testRunId}/defect/{defectKey}": {
      "delete": {
        "tags": [
          "test run"
        ],
        "summary": "Unlink defect from test run",
        "description": "remove/unlink defects from test run",
        "operationId": "unlinkDefectsFromTestRun",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contentType": {
                    "type": "string",
                    "example": "text/plain"
                  },
                  "data": {
                    "type": "string",
                    "example": "ZHVtbXkgY29udGVudA=="
                  },
                  "filename": {
                    "type": "string",
                    "example": "dummy.txt"
                  }
                }
              },
              "examples": {
                "remove/unlink defects from test run": {
                  "value": {
                    "contentType": "text/plain",
                    "data": "ZHVtbXkgY29udGVudA==",
                    "filename": "dummy.txt"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "name": "testRunId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the test run",
          "schema": {
            "type": "string",
            "example": "10001"
          }
        },
        {
          "name": "defectKey",
          "in": "path",
          "required": true,
          "description": "The key of the defect issue",
          "schema": {
            "type": "string",
            "example": "DEFECT-456"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/testrun/{testRunId}/attachment": {
      "get": {
        "tags": [
          "test run"
        ],
        "summary": "List test run attachments",
        "description": "Get all evidence/attachment(s) linked to the test run",
        "operationId": "getTestRunAttachments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contentType": {
                    "type": "string",
                    "example": "text/plain"
                  },
                  "data": {
                    "type": "string",
                    "example": "ZHVtbXkgY29udGVudA=="
                  },
                  "filename": {
                    "type": "string",
                    "example": "dummy.txt"
                  }
                }
              },
              "examples": {
                "get all evidence/attachment(s) linked to the test run": {
                  "value": {
                    "contentType": "text/plain",
                    "data": "ZHVtbXkgY29udGVudA==",
                    "filename": "dummy.txt"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "test run"
        ],
        "summary": "Add test run attachment",
        "description": "add evidence/attachment(s) to the test run",
        "operationId": "addTestRunAttachment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contentType": {
                    "type": "string",
                    "example": "text/plain"
                  },
                  "data": {
                    "type": "string",
                    "example": "ZHVtbXkgY29udGVudA=="
                  },
                  "filename": {
                    "type": "string",
                    "example": "dummy.txt"
                  }
                }
              },
              "examples": {
                "add evidence/attachment(s) to the test run": {
                  "value": {
                    "contentType": "text/plain",
                    "data": "ZHVtbXkgY29udGVudA==",
                    "filename": "dummy.txt"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "test run"
        ],
        "summary": "Delete test run attachment by name",
        "description": "delete evidence/attachment by name",
        "operationId": "deleteTestRunAttachmentByName",
        "requestBody": {
          "content": {
            "text/plain": {
              "examples": {
                "delete evidence/attachment by name": {
                  "value": "dummy.txt"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "name": "testRunId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the test run",
          "schema": {
            "type": "string",
            "example": "10001"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/testrun/{testRunId}/attachment/{attachmentId}": {
      "delete": {
        "tags": [
          "test run"
        ],
        "summary": "Delete test run attachment",
        "description": "Delete evidence/attachment",
        "operationId": "deleteTestRunAttachment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contentType": {
                    "type": "string",
                    "example": "text/plain"
                  },
                  "data": {
                    "type": "string",
                    "example": "ZHVtbXkgY29udGVudA=="
                  },
                  "filename": {
                    "type": "string",
                    "example": "dummy.txt"
                  }
                }
              },
              "examples": {
                "delete evidence/attachment by id": {
                  "value": {
                    "contentType": "text/plain",
                    "data": "ZHVtbXkgY29udGVudA==",
                    "filename": "dummy.txt"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "name": "testRunId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the test run",
          "schema": {
            "type": "string",
            "example": "10001"
          }
        },
        {
          "name": "attachmentId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the test run attachment",
          "schema": {
            "type": "string",
            "example": "67890"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/testrun/{testRunId}/comment": {
      "get": {
        "tags": [
          "test run"
        ],
        "summary": "Get test run comment",
        "description": "get test run comment",
        "operationId": "getTestRunComment",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "test run"
        ],
        "summary": "Update test run comment",
        "description": "update test run comment",
        "operationId": "updateTestRunComment",
        "requestBody": {
          "content": {
            "text/plain": {
              "examples": {
                "set test run comment": {
                  "value": "My new comment"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "name": "testRunId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the test run",
          "schema": {
            "type": "string",
            "example": "10001"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/testrun/{testRunId}/assignee": {
      "get": {
        "tags": [
          "test run"
        ],
        "summary": "Get test run assignee",
        "description": "get test run assignee",
        "operationId": "getTestRunAssignee",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "name": "testRunId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the test run",
          "schema": {
            "type": "string",
            "example": "10001"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/testrun/{testRunId}/step": {
      "get": {
        "tags": [
          "test run"
        ],
        "summary": "List test run steps",
        "description": "Get all test run steps",
        "operationId": "listTestRunSteps",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "name": "testRunId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the test run",
          "schema": {
            "type": "string",
            "example": "10001"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/testrun/{testRunId}/step/{stepResultId}": {
      "get": {
        "tags": [
          "test run"
        ],
        "summary": "Get test run step details",
        "description": "Get test run step details",
        "operationId": "getTestRunStepDetails",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "test run"
        ],
        "summary": "Update test run step details",
        "description": "Update test run step details",
        "operationId": "updateTestRunStepDetails",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "actualResult": {
                    "type": "string",
                    "example": "The actual result"
                  },
                  "comment": {
                    "type": "string",
                    "example": "The comment"
                  },
                  "evidences": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "contentType": {
                          "type": "string",
                          "example": "text/plain"
                        },
                        "data": {
                          "type": "string",
                          "example": "ZHVtbXkgY29udGVudA=="
                        },
                        "filename": {
                          "type": "string",
                          "example": "dummy.txt"
                        }
                      }
                    },
                    "example": [
                      {
                        "contentType": "text/plain",
                        "data": "ZHVtbXkgY29udGVudA==",
                        "filename": "dummy.txt"
                      }
                    ]
                  },
                  "id": {
                    "type": "string",
                    "example": "30001"
                  },
                  "status": {
                    "type": "string",
                    "example": "PASS"
                  }
                }
              },
              "examples": {
                "Set test run step details by id": {
                  "value": {
                    "actualResult": "The actual result",
                    "comment": "The comment",
                    "evidences": [
                      {
                        "contentType": "text/plain",
                        "data": "ZHVtbXkgY29udGVudA==",
                        "filename": "dummy.txt"
                      }
                    ],
                    "id": "30001",
                    "status": "PASS"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "name": "testRunId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the test run",
          "schema": {
            "type": "string",
            "example": "10001"
          }
        },
        {
          "name": "stepResultId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the test step result",
          "schema": {
            "type": "string",
            "example": "11111"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/testrun/{testRunId}/step/{stepResultId}/status": {
      "get": {
        "tags": [
          "test run"
        ],
        "summary": "Get test run step status",
        "description": "Get test run step status",
        "operationId": "getTestRunStepStatus",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "test run"
        ],
        "summary": "Update test run step status",
        "description": "Update test run step status",
        "operationId": "updateTestRunStepStatus",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "FAIL"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "name": "testRunId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the test run",
          "schema": {
            "type": "string",
            "example": "10001"
          }
        },
        {
          "name": "stepResultId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the test step result",
          "schema": {
            "type": "string",
            "example": "11111"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/testrun/{testRunId}/step/{stepResultId}/attachment": {
      "get": {
        "tags": [
          "test run"
        ],
        "summary": "List test run step attachments",
        "description": "Get all evidence/attachment(s) linked to the test run step",
        "operationId": "getTestRunStepAttachments",
        "requestBody": {
          "content": {
            "text/plain": {
              "examples": {
                "get all evidence/attachment(s) linked to the test run step": {
                  "value": ""
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "test run"
        ],
        "summary": "Add test run step attachment",
        "description": "add evidence/attachment(s) to the test run step",
        "operationId": "addTestRunStepAttachment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contentType": {
                    "type": "string",
                    "example": "text/plain"
                  },
                  "data": {
                    "type": "string",
                    "example": "ZHVtbXkgY29udGVudA=="
                  },
                  "filename": {
                    "type": "string",
                    "example": "dummy.txt"
                  }
                }
              },
              "examples": {
                "add evidence/attachment(s) to the test run step": {
                  "value": {
                    "contentType": "text/plain",
                    "data": "ZHVtbXkgY29udGVudA==",
                    "filename": "dummy.txt"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "test run"
        ],
        "summary": "Delete test run step attachment by name",
        "description": "delete evidence/attachment in test run step by name",
        "operationId": "deleteTestRunStepAttachmentByName",
        "requestBody": {
          "content": {
            "text/plain": {
              "examples": {
                "delete evidence/attachment in test run step by name": {
                  "value": "dummy.txt"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "name": "testRunId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the test run",
          "schema": {
            "type": "string",
            "example": "10001"
          }
        },
        {
          "name": "stepResultId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the test step result",
          "schema": {
            "type": "string",
            "example": "11111"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/testrun/{testRunId}/step/{stepResultId}/attachment/{stepAttachmentId}": {
      "delete": {
        "tags": [
          "test run"
        ],
        "summary": "Delete test run step attachment",
        "description": "Delete evidence/attachment in test run step",
        "operationId": "deleteTestRunStepAttachment",
        "requestBody": {
          "content": {
            "text/plain": {
              "examples": {
                "delete evidence/attachment in test run step by id": {
                  "value": ""
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "name": "testRunId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the test run",
          "schema": {
            "type": "string",
            "example": "10001"
          }
        },
        {
          "name": "stepResultId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the test step result",
          "schema": {
            "type": "string",
            "example": "11111"
          }
        },
        {
          "name": "stepAttachmentId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the test step attachment",
          "schema": {
            "type": "string",
            "example": "22222"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/testrun/{testRunId}/example/{exampleIndex}": {
      "get": {
        "tags": [
          "test run"
        ],
        "summary": "Get outline example details",
        "description": "Updates the details of an outline example for a given test run and example index.",
        "operationId": "getOutlineExampleDetailsByIndex",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "test run"
        ],
        "summary": "Update outline example details",
        "description": "Updates the details of an outline example for a given test run and example index.",
        "operationId": "updateOutlineExampleDetails",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "PASS"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Outline example details successfully updated. Returns the updated example details."
          }
        }
      },
      "parameters": [
        {
          "name": "testRunId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the test run",
          "schema": {
            "type": "string",
            "example": "10001"
          }
        },
        {
          "name": "exampleIndex",
          "in": "path",
          "required": true,
          "description": "The index of the outline example (0-based)",
          "schema": {
            "type": "integer",
            "example": 0
          }
        }
      ]
    },
    "/rest/raven/2.0/api/testrun/{testRunId}/customfield/{customFieldId}": {
      "get": {
        "tags": [
          "test run"
        ],
        "summary": "Get test run custom field",
        "description": "Retrieves a Test Run Custom Field, given the Test Run and the Test Run Custom Field ids.",
        "operationId": "getTestRunCustomField",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "test run"
        ],
        "summary": "Update test run custom field",
        "description": "Updates the value of a test run custom field, given the Test Run and the Test Run Custom Field ids. The custom field value should be a valid value according to the field type. <br/><br/> - **Toggle Fields** values should be _\"true\"_, _\"false\"_, _\"0\"_ or _\"1\"_ <br /><br /> - **Number Fields** values should be a string containing a number, e.g. _\"320\"_. Decimal Number are also accepted,for instance, \"320.5\". The decimal places are always separated by a _\".\"_  <br /> <br /> - **Single Select and Radio Button Fields** values should be a single string containing the option value, e.g. _\"Option A\"_. The value should be a valid option for that custom field. The values are not case sensitive. <br /><br /> - **Multiple Select Fields** values should be an array of the string of option values, e.g. _[\"Option A\", \"Option B\"]_. All the selected values should be valid for that custom field. The option values are not case sensitive. <br /><br /> - **Date Fields** should follow the ISO format _yyyy-MM-dd_, where _yyyy_ represents the year, _MM_ the month in year and _dd_ the day in the month. For instance, a valid value would be _\"2020-05-02\"_. <br /><br /> - **Date Time fields** should be in UTC following the ISO format _yyyy-MM-dd'T'HH:mm'Z'_. The date part follows the same date format, while _HH_ represents the hours (0-24), _mm_ the minutes in hour and _Z_ indicates the hour in UTC. For instance, a valid date time value would be _\"2020-05-02T10:30Z\"_. <br /><br />\nAn error will be returned when there are invalid custom field values.\nIt is also possible to delete a Test Run custom field value by providing a _null_ or empty value (e.g., _\"\"_ or _[]_). **It is not possible to delete a value of a required Test Run Custom Field value.** <br/>",
        "operationId": "updateTestRunCustomField",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "example": "<string>"
                  }
                }
              },
              "examples": {
                "/testrun/:testRunId/customfield/:customFieldId": {
                  "value": {
                    "value": "<string>"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "name": "testRunId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "10003"
          },
          "description": "(Required) The id of the Test Run"
        },
        {
          "name": "customFieldId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "<string>"
          },
          "description": "(Required) The id of the Test Run Custom Field"
        }
      ]
    },
    "/rest/raven/2.0/api/testplan/{testPlanKey}/test": {
      "get": {
        "tags": [
          "test plan"
        ],
        "summary": "List test plan tests",
        "description": "get tests associated to test plan, along with their consolidated status",
        "operationId": "getTestPlanTests",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "test plan"
        ],
        "summary": "Update test plan tests",
        "description": "associate test to a test plan",
        "operationId": "associateTestToTestPlan",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "remove": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "TEST-123"
                    },
                    "example": [
                      "TEST-123"
                    ]
                  }
                }
              },
              "examples": {
                "associate test to a test plan": {
                  "value": {
                    "add": [
                      "TEST-123"
                    ]
                  }
                },
                "disassociate test from a test plan": {
                  "value": {
                    "remove": [
                      "TEST-123"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "name": "testPlanKey",
          "in": "path",
          "required": true,
          "description": "The key of the test plan issue",
          "schema": {
            "type": "string",
            "example": "PLAN-123"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/test/{testKey}/testplans": {
      "get": {
        "tags": [
          "test"
        ],
        "summary": "List test plans",
        "description": "export test' test plans",
        "operationId": "listTestTestPlans",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "name": "testKey",
          "in": "path",
          "required": true,
          "description": "The key of the test issue",
          "schema": {
            "type": "string",
            "example": "TEST-123"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/testrepository/{projectKey}/folders": {
      "get": {
        "tags": [
          "test repository"
        ],
        "summary": "List test repository folders",
        "description": "Retrieves the complete folder hierarchy structure of the test repository for a specified project. Returns a tree-like structure showing all folders, subfolders, and their relationships within the test repository, enabling navigation and organization of test assets.",
        "operationId": "getTestRepositoryFolderHierarchy",
        "responses": {
          "200": {
            "description": "Successfully retrieved test repository folder hierarchy. Returns a hierarchical tree structure containing folder IDs, names, parent-child relationships, and folder metadata. Each folder node includes its position in the hierarchy and access permissions."
          }
        }
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "description": "The key of the Jira project",
          "schema": {
            "type": "string",
            "example": "MYPROJ"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/testrepository/{projectKey}/folders/{folderId}": {
      "get": {
        "tags": [
          "test repository"
        ],
        "summary": "Get test repository folder",
        "description": "get details of a test repository's folder",
        "operationId": "getTestRepositoryFolder",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "test repository"
        ],
        "summary": "Create test repository folder",
        "description": "create folder in a test repository",
        "operationId": "createTestRepositoryFolder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Postman 3"
                  }
                }
              },
              "examples": {
                "create folder in a test repository": {
                  "value": {
                    "name": "Postman 3"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "description": "The key of the Jira project",
          "schema": {
            "type": "string",
            "example": "MYPROJ"
          }
        },
        {
          "name": "folderId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the test repository folder",
          "schema": {
            "type": "string",
            "example": "1001"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/testrepository/{projectKey}/folders/{updateFolderId}": {
      "put": {
        "tags": [
          "test repository"
        ],
        "summary": "Update test repository folder",
        "description": "Notes:\n- the docs mention HTTP status code 204 in success but it returns 200\n-  depends on previous",
        "operationId": "updateTestRepositoryFolder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Postman X"
                  }
                }
              },
              "examples": {
                "update test repository's folder details by id": {
                  "value": {
                    "name": "Postman X"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "test repository"
        ],
        "summary": "Delete test repository folder",
        "description": "Notes:\n- the docs mention HTTP status code 204 in success but it returns 200\n-  depends on previous",
        "operationId": "deleteTestRepositoryFolder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Postman X"
                  }
                }
              },
              "examples": {
                "delete a test repository's folder by id": {
                  "value": {
                    "name": "Postman X"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "description": "The key of the Jira project",
          "schema": {
            "type": "string",
            "example": "MYPROJ"
          }
        },
        {
          "name": "updateFolderId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the test repository folder to update",
          "schema": {
            "type": "string",
            "example": "2002"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/testrepository/{projectKey}/folders/{testFolderId}/tests": {
      "get": {
        "tags": [
          "test repository"
        ],
        "summary": "List folder tests",
        "description": "get tests within a specific folder in the test repository",
        "operationId": "getFolderTests",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "description": "The key of the Jira project",
          "schema": {
            "type": "string",
            "example": "MYPROJ"
          }
        },
        {
          "name": "testFolderId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the test repository folder",
          "schema": {
            "type": "string",
            "example": "1003"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/testrepository/{projectKey}/folders/{manageFolderId}/tests": {
      "put": {
        "tags": [
          "test repository"
        ],
        "summary": "Update folder tests",
        "description": "Notes:\n- the docs mention HTTP status code 204 in success but it returns 200\n- not depends on previous",
        "operationId": "addTestsToFolder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "remove": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "TEST-456"
                    },
                    "example": [
                      "TEST-456"
                    ]
                  }
                }
              },
              "examples": {
                "add tests to a specific folder in the test repository": {
                  "value": {
                    "add": [
                      "TEST-456"
                    ]
                  }
                },
                "remove tests from a specific folder in the test repository": {
                  "value": {
                    "remove": [
                      "TEST-456"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "description": "The key of the Jira project",
          "schema": {
            "type": "string",
            "example": "MYPROJ"
          }
        },
        {
          "name": "manageFolderId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the test repository folder to manage",
          "schema": {
            "type": "string",
            "example": "1004"
          }
        }
      ]
    },
    "/rest/raven/2.0/import/execution": {
      "post": {
        "tags": [
          "import"
        ],
        "summary": "Import standard test execution results",
        "description": "Import standard test execution results",
        "operationId": "importXrayJsonResults",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "info": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "example": "This execution is automatically created when importing execution results from an external source"
                      },
                      "finishDate": {
                        "type": "string",
                        "example": "2020-05-30T11:50:00+01:00"
                      },
                      "startDate": {
                        "type": "string",
                        "example": "2020-05-30T11:37:00+01:00"
                      },
                      "summary": {
                        "type": "string",
                        "example": "Execution of automated tests for release"
                      }
                    }
                  },
                  "tests": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "comment": {
                          "type": "string",
                          "example": "Successful execution1"
                        },
                        "finish": {
                          "type": "string",
                          "example": "2020-05-30T11:49:35+01:00"
                        },
                        "start": {
                          "type": "string",
                          "example": "2020-05-30T11:47:35+01:00"
                        },
                        "status": {
                          "type": "string",
                          "example": "PASS"
                        },
                        "testKey": {
                          "type": "string",
                          "example": "TEST-123"
                        }
                      }
                    },
                    "example": [
                      {
                        "comment": "Successful execution1",
                        "finish": "2020-05-30T11:49:35+01:00",
                        "start": "2020-05-30T11:47:35+01:00",
                        "status": "PASS",
                        "testKey": "TEST-123"
                      },
                      {
                        "comment": "Successful execution2",
                        "finish": "2020-05-30T11:39:35+01:00",
                        "start": "2020-05-30T11:37:35+01:00",
                        "status": "PASS",
                        "testKey": "TEST-456"
                      },
                      {
                        "comment": "Successful execution3",
                        "finish": "2020-05-30T11:45:35+01:00",
                        "start": "2020-05-30T11:44:35+01:00",
                        "status": "PASS",
                        "testKey": "TEST-789"
                      }
                    ]
                  }
                }
              },
              "examples": {
                "standard": {
                  "value": {
                    "info": {
                      "description": "This execution is automatically created when importing execution results from an external source",
                      "finishDate": "2020-05-30T11:50:00+01:00",
                      "startDate": "2020-05-30T11:37:00+01:00",
                      "summary": "Execution of automated tests for release"
                    },
                    "tests": [
                      {
                        "comment": "Successful execution1",
                        "finish": "2020-05-30T11:49:35+01:00",
                        "start": "2020-05-30T11:47:35+01:00",
                        "status": "PASS",
                        "testKey": "TEST-123"
                      },
                      {
                        "comment": "Successful execution2",
                        "finish": "2020-05-30T11:39:35+01:00",
                        "start": "2020-05-30T11:37:35+01:00",
                        "status": "PASS",
                        "testKey": "TEST-456"
                      },
                      {
                        "comment": "Successful execution3",
                        "finish": "2020-05-30T11:45:35+01:00",
                        "start": "2020-05-30T11:44:35+01:00",
                        "status": "PASS",
                        "testKey": "TEST-789"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/rest/raven/2.0/import/execution/cucumber": {
      "post": {
        "tags": [
          "import"
        ],
        "summary": "Import Cucumber test execution results",
        "description": "Imports Cucumber test execution results from JSON format into Xray. Processes Cucumber feature files execution output including scenarios, scenario outlines, step definitions with Before/After hooks, step execution times, and failure details. Automatically creates or updates Test Executions and Test Runs, matching tests by feature and scenario names.",
        "operationId": "importCucumberResults",
        "parameters": [
          {
            "name": "projectKey",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "MYPROJ"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "example": ""
                    },
                    "elements": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "after": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "match": {
                                  "type": "object",
                                  "properties": {
                                    "location": {
                                      "type": "string",
                                      "example": "features/step_definitions/calculator_steps.rb:13"
                                    }
                                  }
                                },
                                "result": {
                                  "type": "object",
                                  "properties": {
                                    "duration": {
                                      "type": "number",
                                      "example": 8000
                                    },
                                    "status": {
                                      "type": "string",
                                      "example": "passed"
                                    }
                                  }
                                }
                              }
                            },
                            "example": [
                              {
                                "match": {
                                  "location": "features/step_definitions/calculator_steps.rb:13"
                                },
                                "result": {
                                  "duration": 8000,
                                  "status": "passed"
                                }
                              }
                            ]
                          },
                          "before": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "match": {
                                  "type": "object",
                                  "properties": {
                                    "location": {
                                      "type": "string",
                                      "example": "features/step_definitions/calculator_steps.rb:9"
                                    }
                                  }
                                },
                                "result": {
                                  "type": "object",
                                  "properties": {
                                    "duration": {
                                      "type": "number",
                                      "example": 21000
                                    },
                                    "status": {
                                      "type": "string",
                                      "example": "passed"
                                    }
                                  }
                                }
                              }
                            },
                            "example": [
                              {
                                "match": {
                                  "location": "features/step_definitions/calculator_steps.rb:9"
                                },
                                "result": {
                                  "duration": 21000,
                                  "status": "passed"
                                }
                              }
                            ]
                          },
                          "description": {
                            "type": "string",
                            "example": ""
                          },
                          "id": {
                            "type": "string",
                            "example": "as-a-user,-i-can-sum-two-numbers;;;2"
                          },
                          "keyword": {
                            "type": "string",
                            "example": "Scenario Outline"
                          },
                          "line": {
                            "type": "number",
                            "example": 13
                          },
                          "name": {
                            "type": "string",
                            "example": ""
                          },
                          "steps": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "keyword": {
                                  "type": "string",
                                  "example": "Given "
                                },
                                "line": {
                                  "type": "number",
                                  "example": 6
                                },
                                "match": {
                                  "type": "object",
                                  "properties": {
                                    "location": {
                                      "type": "string",
                                      "example": "features/step_definitions/calculator_steps.rb:39"
                                    }
                                  }
                                },
                                "name": {
                                  "type": "string",
                                  "example": "I have entered 20 into the calculator"
                                },
                                "result": {
                                  "type": "object",
                                  "properties": {
                                    "duration": {
                                      "type": "number",
                                      "example": 45000
                                    },
                                    "status": {
                                      "type": "string",
                                      "example": "passed"
                                    }
                                  }
                                }
                              }
                            },
                            "example": [
                              {
                                "keyword": "Given ",
                                "line": 6,
                                "match": {
                                  "location": "features/step_definitions/calculator_steps.rb:39"
                                },
                                "name": "I have entered 20 into the calculator",
                                "result": {
                                  "duration": 45000,
                                  "status": "passed"
                                }
                              },
                              {
                                "keyword": "And ",
                                "line": 7,
                                "match": {
                                  "location": "features/step_definitions/calculator_steps.rb:39"
                                },
                                "name": "I have entered 30 into the calculator",
                                "result": {
                                  "duration": 11000,
                                  "status": "passed"
                                }
                              },
                              {
                                "keyword": "When ",
                                "line": 8,
                                "match": {
                                  "location": "features/step_definitions/calculator_steps.rb:43"
                                },
                                "name": "I press add",
                                "result": {
                                  "duration": 17000,
                                  "status": "passed"
                                }
                              },
                              {
                                "keyword": "Then ",
                                "line": 9,
                                "match": {
                                  "location": "features/step_definitions/calculator_steps.rb:51"
                                },
                                "name": "the result should be 50 on the screen",
                                "result": {
                                  "duration": 764000,
                                  "status": "passed"
                                }
                              }
                            ]
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "line": {
                                  "type": "number",
                                  "example": 1
                                },
                                "name": {
                                  "type": "string",
                                  "example": "@REQ_REQ-123"
                                }
                              }
                            },
                            "example": [
                              {
                                "line": 1,
                                "name": "@REQ_REQ-123"
                              },
                              {
                                "line": 4,
                                "name": "@TEST_TEST-456"
                              }
                            ]
                          },
                          "type": {
                            "type": "string",
                            "example": "scenario"
                          }
                        }
                      },
                      "example": [
                        {
                          "after": [
                            {
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:13"
                              },
                              "result": {
                                "duration": 8000,
                                "status": "passed"
                              }
                            }
                          ],
                          "before": [
                            {
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:9"
                              },
                              "result": {
                                "duration": 21000,
                                "status": "passed"
                              }
                            }
                          ],
                          "description": "",
                          "id": "as-a-user,-i-can-sum-two-numbers;;;2",
                          "keyword": "Scenario Outline",
                          "line": 13,
                          "name": "",
                          "steps": [
                            {
                              "keyword": "Given ",
                              "line": 6,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:39"
                              },
                              "name": "I have entered 20 into the calculator",
                              "result": {
                                "duration": 45000,
                                "status": "passed"
                              }
                            },
                            {
                              "keyword": "And ",
                              "line": 7,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:39"
                              },
                              "name": "I have entered 30 into the calculator",
                              "result": {
                                "duration": 11000,
                                "status": "passed"
                              }
                            },
                            {
                              "keyword": "When ",
                              "line": 8,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:43"
                              },
                              "name": "I press add",
                              "result": {
                                "duration": 17000,
                                "status": "passed"
                              }
                            },
                            {
                              "keyword": "Then ",
                              "line": 9,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:51"
                              },
                              "name": "the result should be 50 on the screen",
                              "result": {
                                "duration": 764000,
                                "status": "passed"
                              }
                            }
                          ],
                          "tags": [
                            {
                              "line": 1,
                              "name": "@REQ_REQ-123"
                            },
                            {
                              "line": 4,
                              "name": "@TEST_TEST-456"
                            }
                          ],
                          "type": "scenario"
                        },
                        {
                          "after": [
                            {
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:13"
                              },
                              "result": {
                                "duration": 6000,
                                "status": "passed"
                              }
                            }
                          ],
                          "before": [
                            {
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:9"
                              },
                              "result": {
                                "duration": 8000,
                                "status": "passed"
                              }
                            }
                          ],
                          "description": "",
                          "id": "as-a-user,-i-can-sum-two-numbers;;;3",
                          "keyword": "Scenario Outline",
                          "line": 14,
                          "name": "",
                          "steps": [
                            {
                              "keyword": "Given ",
                              "line": 6,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:39"
                              },
                              "name": "I have entered 2 into the calculator",
                              "result": {
                                "duration": 14000,
                                "status": "passed"
                              }
                            },
                            {
                              "keyword": "And ",
                              "line": 7,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:39"
                              },
                              "name": "I have entered 5 into the calculator",
                              "result": {
                                "duration": 9000,
                                "status": "passed"
                              }
                            },
                            {
                              "keyword": "When ",
                              "line": 8,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:43"
                              },
                              "name": "I press add",
                              "result": {
                                "duration": 11000,
                                "status": "passed"
                              }
                            },
                            {
                              "keyword": "Then ",
                              "line": 9,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:51"
                              },
                              "name": "the result should be 7 on the screen",
                              "result": {
                                "duration": 19000,
                                "status": "passed"
                              }
                            }
                          ],
                          "tags": [
                            {
                              "line": 1,
                              "name": "@REQ_REQ-123"
                            },
                            {
                              "line": 4,
                              "name": "@TEST_TEST-456"
                            }
                          ],
                          "type": "scenario"
                        },
                        {
                          "after": [
                            {
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:13"
                              },
                              "result": {
                                "duration": 6000,
                                "status": "passed"
                              }
                            }
                          ],
                          "before": [
                            {
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:9"
                              },
                              "result": {
                                "duration": 8000,
                                "status": "passed"
                              }
                            }
                          ],
                          "description": "",
                          "id": "as-a-user,-i-can-sum-two-numbers;;;4",
                          "keyword": "Scenario Outline",
                          "line": 15,
                          "name": "",
                          "steps": [
                            {
                              "keyword": "Given ",
                              "line": 6,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:39"
                              },
                              "name": "I have entered 0 into the calculator",
                              "result": {
                                "duration": 14000,
                                "status": "passed"
                              }
                            },
                            {
                              "keyword": "And ",
                              "line": 7,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:39"
                              },
                              "name": "I have entered 40 into the calculator",
                              "result": {
                                "duration": 9000,
                                "status": "passed"
                              }
                            },
                            {
                              "keyword": "When ",
                              "line": 8,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:43"
                              },
                              "name": "I press add",
                              "result": {
                                "duration": 11000,
                                "status": "passed"
                              }
                            },
                            {
                              "keyword": "Then ",
                              "line": 9,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:51"
                              },
                              "name": "the result should be 40 on the screen",
                              "result": {
                                "duration": 17000,
                                "status": "passed"
                              }
                            }
                          ],
                          "tags": [
                            {
                              "line": 1,
                              "name": "@REQ_REQ-123"
                            },
                            {
                              "line": 4,
                              "name": "@TEST_TEST-456"
                            }
                          ],
                          "type": "scenario"
                        },
                        {
                          "after": [
                            {
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:13"
                              },
                              "result": {
                                "duration": 6000,
                                "status": "passed"
                              }
                            }
                          ],
                          "before": [
                            {
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:9"
                              },
                              "result": {
                                "duration": 7000,
                                "status": "passed"
                              }
                            }
                          ],
                          "description": "",
                          "id": "as-a-user,-i-can-sum-two-numbers;;;5",
                          "keyword": "Scenario Outline",
                          "line": 16,
                          "name": "",
                          "steps": [
                            {
                              "keyword": "Given ",
                              "line": 6,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:39"
                              },
                              "name": "I have entered 4 into the calculator",
                              "result": {
                                "duration": 14000,
                                "status": "passed"
                              }
                            },
                            {
                              "keyword": "And ",
                              "line": 7,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:39"
                              },
                              "name": "I have entered 50 into the calculator",
                              "result": {
                                "duration": 9000,
                                "status": "passed"
                              }
                            },
                            {
                              "keyword": "When ",
                              "line": 8,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:43"
                              },
                              "name": "I press add",
                              "result": {
                                "duration": 27000,
                                "status": "passed"
                              }
                            },
                            {
                              "keyword": "Then ",
                              "line": 9,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:51"
                              },
                              "name": "the result should be 54 on the screen",
                              "result": {
                                "duration": 17000,
                                "status": "passed"
                              }
                            }
                          ],
                          "tags": [
                            {
                              "line": 1,
                              "name": "@REQ_REQ-123"
                            },
                            {
                              "line": 4,
                              "name": "@TEST_TEST-456"
                            }
                          ],
                          "type": "scenario"
                        },
                        {
                          "after": [
                            {
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:13"
                              },
                              "result": {
                                "duration": 6000,
                                "status": "passed"
                              }
                            }
                          ],
                          "before": [
                            {
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:9"
                              },
                              "result": {
                                "duration": 8000,
                                "status": "passed"
                              }
                            }
                          ],
                          "description": "",
                          "id": "as-a-user,-i-can-sum-two-numbers;;;6",
                          "keyword": "Scenario Outline",
                          "line": 17,
                          "name": "",
                          "steps": [
                            {
                              "keyword": "Given ",
                              "line": 6,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:39"
                              },
                              "name": "I have entered 5 into the calculator",
                              "result": {
                                "duration": 14000,
                                "status": "passed"
                              }
                            },
                            {
                              "keyword": "And ",
                              "line": 7,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:39"
                              },
                              "name": "I have entered 50 into the calculator",
                              "result": {
                                "duration": 9000,
                                "status": "passed"
                              }
                            },
                            {
                              "keyword": "When ",
                              "line": 8,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:43"
                              },
                              "name": "I press add",
                              "result": {
                                "duration": 11000,
                                "status": "passed"
                              }
                            },
                            {
                              "keyword": "Then ",
                              "line": 9,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:51"
                              },
                              "name": "the result should be 55 on the screen",
                              "result": {
                                "duration": 18000,
                                "status": "passed"
                              }
                            }
                          ],
                          "tags": [
                            {
                              "line": 1,
                              "name": "@REQ_REQ-123"
                            },
                            {
                              "line": 4,
                              "name": "@TEST-123"
                            }
                          ],
                          "type": "scenario"
                        }
                      ]
                    },
                    "id": {
                      "type": "string",
                      "example": "as-a-user,-i-can-sum-two-numbers"
                    },
                    "keyword": {
                      "type": "string",
                      "example": "Feature"
                    },
                    "line": {
                      "type": "number",
                      "example": 2
                    },
                    "name": {
                      "type": "string",
                      "example": "As a user, I can sum two numbers"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "line": {
                            "type": "number",
                            "example": 1
                          },
                          "name": {
                            "type": "string",
                            "example": "@REQ_REQ-123"
                          }
                        }
                      },
                      "example": [
                        {
                          "line": 1,
                          "name": "@REQ_REQ-123"
                        }
                      ]
                    },
                    "uri": {
                      "type": "string",
                      "example": "features/sample_scenario_outline.feature"
                    }
                  }
                },
                "example": [
                  {
                    "description": "",
                    "elements": [
                      {
                        "after": [
                          {
                            "match": {
                              "location": "features/step_definitions/calculator_steps.rb:13"
                            },
                            "result": {
                              "duration": 8000,
                              "status": "passed"
                            }
                          }
                        ],
                        "before": [
                          {
                            "match": {
                              "location": "features/step_definitions/calculator_steps.rb:9"
                            },
                            "result": {
                              "duration": 21000,
                              "status": "passed"
                            }
                          }
                        ],
                        "description": "",
                        "id": "as-a-user,-i-can-sum-two-numbers;;;2",
                        "keyword": "Scenario Outline",
                        "line": 13,
                        "name": "",
                        "steps": [
                          {
                            "keyword": "Given ",
                            "line": 6,
                            "match": {
                              "location": "features/step_definitions/calculator_steps.rb:39"
                            },
                            "name": "I have entered 20 into the calculator",
                            "result": {
                              "duration": 45000,
                              "status": "passed"
                            }
                          },
                          {
                            "keyword": "And ",
                            "line": 7,
                            "match": {
                              "location": "features/step_definitions/calculator_steps.rb:39"
                            },
                            "name": "I have entered 30 into the calculator",
                            "result": {
                              "duration": 11000,
                              "status": "passed"
                            }
                          },
                          {
                            "keyword": "When ",
                            "line": 8,
                            "match": {
                              "location": "features/step_definitions/calculator_steps.rb:43"
                            },
                            "name": "I press add",
                            "result": {
                              "duration": 17000,
                              "status": "passed"
                            }
                          },
                          {
                            "keyword": "Then ",
                            "line": 9,
                            "match": {
                              "location": "features/step_definitions/calculator_steps.rb:51"
                            },
                            "name": "the result should be 50 on the screen",
                            "result": {
                              "duration": 764000,
                              "status": "passed"
                            }
                          }
                        ],
                        "tags": [
                          {
                            "line": 1,
                            "name": "@REQ_REQ-123"
                          },
                          {
                            "line": 4,
                            "name": "@TEST_TEST-456"
                          }
                        ],
                        "type": "scenario"
                      },
                      {
                        "after": [
                          {
                            "match": {
                              "location": "features/step_definitions/calculator_steps.rb:13"
                            },
                            "result": {
                              "duration": 6000,
                              "status": "passed"
                            }
                          }
                        ],
                        "before": [
                          {
                            "match": {
                              "location": "features/step_definitions/calculator_steps.rb:9"
                            },
                            "result": {
                              "duration": 8000,
                              "status": "passed"
                            }
                          }
                        ],
                        "description": "",
                        "id": "as-a-user,-i-can-sum-two-numbers;;;3",
                        "keyword": "Scenario Outline",
                        "line": 14,
                        "name": "",
                        "steps": [
                          {
                            "keyword": "Given ",
                            "line": 6,
                            "match": {
                              "location": "features/step_definitions/calculator_steps.rb:39"
                            },
                            "name": "I have entered 2 into the calculator",
                            "result": {
                              "duration": 14000,
                              "status": "passed"
                            }
                          },
                          {
                            "keyword": "And ",
                            "line": 7,
                            "match": {
                              "location": "features/step_definitions/calculator_steps.rb:39"
                            },
                            "name": "I have entered 5 into the calculator",
                            "result": {
                              "duration": 9000,
                              "status": "passed"
                            }
                          },
                          {
                            "keyword": "When ",
                            "line": 8,
                            "match": {
                              "location": "features/step_definitions/calculator_steps.rb:43"
                            },
                            "name": "I press add",
                            "result": {
                              "duration": 11000,
                              "status": "passed"
                            }
                          },
                          {
                            "keyword": "Then ",
                            "line": 9,
                            "match": {
                              "location": "features/step_definitions/calculator_steps.rb:51"
                            },
                            "name": "the result should be 7 on the screen",
                            "result": {
                              "duration": 19000,
                              "status": "passed"
                            }
                          }
                        ],
                        "tags": [
                          {
                            "line": 1,
                            "name": "@REQ_REQ-123"
                          },
                          {
                            "line": 4,
                            "name": "@TEST_TEST-456"
                          }
                        ],
                        "type": "scenario"
                      },
                      {
                        "after": [
                          {
                            "match": {
                              "location": "features/step_definitions/calculator_steps.rb:13"
                            },
                            "result": {
                              "duration": 6000,
                              "status": "passed"
                            }
                          }
                        ],
                        "before": [
                          {
                            "match": {
                              "location": "features/step_definitions/calculator_steps.rb:9"
                            },
                            "result": {
                              "duration": 8000,
                              "status": "passed"
                            }
                          }
                        ],
                        "description": "",
                        "id": "as-a-user,-i-can-sum-two-numbers;;;4",
                        "keyword": "Scenario Outline",
                        "line": 15,
                        "name": "",
                        "steps": [
                          {
                            "keyword": "Given ",
                            "line": 6,
                            "match": {
                              "location": "features/step_definitions/calculator_steps.rb:39"
                            },
                            "name": "I have entered 0 into the calculator",
                            "result": {
                              "duration": 14000,
                              "status": "passed"
                            }
                          },
                          {
                            "keyword": "And ",
                            "line": 7,
                            "match": {
                              "location": "features/step_definitions/calculator_steps.rb:39"
                            },
                            "name": "I have entered 40 into the calculator",
                            "result": {
                              "duration": 9000,
                              "status": "passed"
                            }
                          },
                          {
                            "keyword": "When ",
                            "line": 8,
                            "match": {
                              "location": "features/step_definitions/calculator_steps.rb:43"
                            },
                            "name": "I press add",
                            "result": {
                              "duration": 11000,
                              "status": "passed"
                            }
                          },
                          {
                            "keyword": "Then ",
                            "line": 9,
                            "match": {
                              "location": "features/step_definitions/calculator_steps.rb:51"
                            },
                            "name": "the result should be 40 on the screen",
                            "result": {
                              "duration": 17000,
                              "status": "passed"
                            }
                          }
                        ],
                        "tags": [
                          {
                            "line": 1,
                            "name": "@REQ_REQ-123"
                          },
                          {
                            "line": 4,
                            "name": "@TEST_TEST-456"
                          }
                        ],
                        "type": "scenario"
                      },
                      {
                        "after": [
                          {
                            "match": {
                              "location": "features/step_definitions/calculator_steps.rb:13"
                            },
                            "result": {
                              "duration": 6000,
                              "status": "passed"
                            }
                          }
                        ],
                        "before": [
                          {
                            "match": {
                              "location": "features/step_definitions/calculator_steps.rb:9"
                            },
                            "result": {
                              "duration": 7000,
                              "status": "passed"
                            }
                          }
                        ],
                        "description": "",
                        "id": "as-a-user,-i-can-sum-two-numbers;;;5",
                        "keyword": "Scenario Outline",
                        "line": 16,
                        "name": "",
                        "steps": [
                          {
                            "keyword": "Given ",
                            "line": 6,
                            "match": {
                              "location": "features/step_definitions/calculator_steps.rb:39"
                            },
                            "name": "I have entered 4 into the calculator",
                            "result": {
                              "duration": 14000,
                              "status": "passed"
                            }
                          },
                          {
                            "keyword": "And ",
                            "line": 7,
                            "match": {
                              "location": "features/step_definitions/calculator_steps.rb:39"
                            },
                            "name": "I have entered 50 into the calculator",
                            "result": {
                              "duration": 9000,
                              "status": "passed"
                            }
                          },
                          {
                            "keyword": "When ",
                            "line": 8,
                            "match": {
                              "location": "features/step_definitions/calculator_steps.rb:43"
                            },
                            "name": "I press add",
                            "result": {
                              "duration": 27000,
                              "status": "passed"
                            }
                          },
                          {
                            "keyword": "Then ",
                            "line": 9,
                            "match": {
                              "location": "features/step_definitions/calculator_steps.rb:51"
                            },
                            "name": "the result should be 54 on the screen",
                            "result": {
                              "duration": 17000,
                              "status": "passed"
                            }
                          }
                        ],
                        "tags": [
                          {
                            "line": 1,
                            "name": "@REQ_REQ-123"
                          },
                          {
                            "line": 4,
                            "name": "@TEST_TEST-456"
                          }
                        ],
                        "type": "scenario"
                      },
                      {
                        "after": [
                          {
                            "match": {
                              "location": "features/step_definitions/calculator_steps.rb:13"
                            },
                            "result": {
                              "duration": 6000,
                              "status": "passed"
                            }
                          }
                        ],
                        "before": [
                          {
                            "match": {
                              "location": "features/step_definitions/calculator_steps.rb:9"
                            },
                            "result": {
                              "duration": 8000,
                              "status": "passed"
                            }
                          }
                        ],
                        "description": "",
                        "id": "as-a-user,-i-can-sum-two-numbers;;;6",
                        "keyword": "Scenario Outline",
                        "line": 17,
                        "name": "",
                        "steps": [
                          {
                            "keyword": "Given ",
                            "line": 6,
                            "match": {
                              "location": "features/step_definitions/calculator_steps.rb:39"
                            },
                            "name": "I have entered 5 into the calculator",
                            "result": {
                              "duration": 14000,
                              "status": "passed"
                            }
                          },
                          {
                            "keyword": "And ",
                            "line": 7,
                            "match": {
                              "location": "features/step_definitions/calculator_steps.rb:39"
                            },
                            "name": "I have entered 50 into the calculator",
                            "result": {
                              "duration": 9000,
                              "status": "passed"
                            }
                          },
                          {
                            "keyword": "When ",
                            "line": 8,
                            "match": {
                              "location": "features/step_definitions/calculator_steps.rb:43"
                            },
                            "name": "I press add",
                            "result": {
                              "duration": 11000,
                              "status": "passed"
                            }
                          },
                          {
                            "keyword": "Then ",
                            "line": 9,
                            "match": {
                              "location": "features/step_definitions/calculator_steps.rb:51"
                            },
                            "name": "the result should be 55 on the screen",
                            "result": {
                              "duration": 18000,
                              "status": "passed"
                            }
                          }
                        ],
                        "tags": [
                          {
                            "line": 1,
                            "name": "@REQ_REQ-123"
                          },
                          {
                            "line": 4,
                            "name": "@TEST-123"
                          }
                        ],
                        "type": "scenario"
                      }
                    ],
                    "id": "as-a-user,-i-can-sum-two-numbers",
                    "keyword": "Feature",
                    "line": 2,
                    "name": "As a user, I can sum two numbers",
                    "tags": [
                      {
                        "line": 1,
                        "name": "@REQ_REQ-123"
                      }
                    ],
                    "uri": "features/sample_scenario_outline.feature"
                  }
                ]
              },
              "examples": {
                "standard Cucumber endpoint": {
                  "value": [
                    {
                      "description": "",
                      "elements": [
                        {
                          "after": [
                            {
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:13"
                              },
                              "result": {
                                "duration": 8000,
                                "status": "passed"
                              }
                            }
                          ],
                          "before": [
                            {
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:9"
                              },
                              "result": {
                                "duration": 21000,
                                "status": "passed"
                              }
                            }
                          ],
                          "description": "",
                          "id": "as-a-user,-i-can-sum-two-numbers;;;2",
                          "keyword": "Scenario Outline",
                          "line": 13,
                          "name": "",
                          "steps": [
                            {
                              "keyword": "Given ",
                              "line": 6,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:39"
                              },
                              "name": "I have entered 20 into the calculator",
                              "result": {
                                "duration": 45000,
                                "status": "passed"
                              }
                            },
                            {
                              "keyword": "And ",
                              "line": 7,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:39"
                              },
                              "name": "I have entered 30 into the calculator",
                              "result": {
                                "duration": 11000,
                                "status": "passed"
                              }
                            },
                            {
                              "keyword": "When ",
                              "line": 8,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:43"
                              },
                              "name": "I press add",
                              "result": {
                                "duration": 17000,
                                "status": "passed"
                              }
                            },
                            {
                              "keyword": "Then ",
                              "line": 9,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:51"
                              },
                              "name": "the result should be 50 on the screen",
                              "result": {
                                "duration": 764000,
                                "status": "passed"
                              }
                            }
                          ],
                          "tags": [
                            {
                              "line": 1,
                              "name": "@REQ_REQ-123"
                            },
                            {
                              "line": 4,
                              "name": "@TEST_TEST-456"
                            }
                          ],
                          "type": "scenario"
                        },
                        {
                          "after": [
                            {
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:13"
                              },
                              "result": {
                                "duration": 6000,
                                "status": "passed"
                              }
                            }
                          ],
                          "before": [
                            {
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:9"
                              },
                              "result": {
                                "duration": 8000,
                                "status": "passed"
                              }
                            }
                          ],
                          "description": "",
                          "id": "as-a-user,-i-can-sum-two-numbers;;;3",
                          "keyword": "Scenario Outline",
                          "line": 14,
                          "name": "",
                          "steps": [
                            {
                              "keyword": "Given ",
                              "line": 6,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:39"
                              },
                              "name": "I have entered 2 into the calculator",
                              "result": {
                                "duration": 14000,
                                "status": "passed"
                              }
                            },
                            {
                              "keyword": "And ",
                              "line": 7,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:39"
                              },
                              "name": "I have entered 5 into the calculator",
                              "result": {
                                "duration": 9000,
                                "status": "passed"
                              }
                            },
                            {
                              "keyword": "When ",
                              "line": 8,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:43"
                              },
                              "name": "I press add",
                              "result": {
                                "duration": 11000,
                                "status": "passed"
                              }
                            },
                            {
                              "keyword": "Then ",
                              "line": 9,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:51"
                              },
                              "name": "the result should be 7 on the screen",
                              "result": {
                                "duration": 19000,
                                "status": "passed"
                              }
                            }
                          ],
                          "tags": [
                            {
                              "line": 1,
                              "name": "@REQ_REQ-123"
                            },
                            {
                              "line": 4,
                              "name": "@TEST_TEST-456"
                            }
                          ],
                          "type": "scenario"
                        },
                        {
                          "after": [
                            {
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:13"
                              },
                              "result": {
                                "duration": 6000,
                                "status": "passed"
                              }
                            }
                          ],
                          "before": [
                            {
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:9"
                              },
                              "result": {
                                "duration": 8000,
                                "status": "passed"
                              }
                            }
                          ],
                          "description": "",
                          "id": "as-a-user,-i-can-sum-two-numbers;;;4",
                          "keyword": "Scenario Outline",
                          "line": 15,
                          "name": "",
                          "steps": [
                            {
                              "keyword": "Given ",
                              "line": 6,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:39"
                              },
                              "name": "I have entered 0 into the calculator",
                              "result": {
                                "duration": 14000,
                                "status": "passed"
                              }
                            },
                            {
                              "keyword": "And ",
                              "line": 7,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:39"
                              },
                              "name": "I have entered 40 into the calculator",
                              "result": {
                                "duration": 9000,
                                "status": "passed"
                              }
                            },
                            {
                              "keyword": "When ",
                              "line": 8,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:43"
                              },
                              "name": "I press add",
                              "result": {
                                "duration": 11000,
                                "status": "passed"
                              }
                            },
                            {
                              "keyword": "Then ",
                              "line": 9,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:51"
                              },
                              "name": "the result should be 40 on the screen",
                              "result": {
                                "duration": 17000,
                                "status": "passed"
                              }
                            }
                          ],
                          "tags": [
                            {
                              "line": 1,
                              "name": "@REQ_REQ-123"
                            },
                            {
                              "line": 4,
                              "name": "@TEST_TEST-456"
                            }
                          ],
                          "type": "scenario"
                        },
                        {
                          "after": [
                            {
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:13"
                              },
                              "result": {
                                "duration": 6000,
                                "status": "passed"
                              }
                            }
                          ],
                          "before": [
                            {
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:9"
                              },
                              "result": {
                                "duration": 7000,
                                "status": "passed"
                              }
                            }
                          ],
                          "description": "",
                          "id": "as-a-user,-i-can-sum-two-numbers;;;5",
                          "keyword": "Scenario Outline",
                          "line": 16,
                          "name": "",
                          "steps": [
                            {
                              "keyword": "Given ",
                              "line": 6,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:39"
                              },
                              "name": "I have entered 4 into the calculator",
                              "result": {
                                "duration": 14000,
                                "status": "passed"
                              }
                            },
                            {
                              "keyword": "And ",
                              "line": 7,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:39"
                              },
                              "name": "I have entered 50 into the calculator",
                              "result": {
                                "duration": 9000,
                                "status": "passed"
                              }
                            },
                            {
                              "keyword": "When ",
                              "line": 8,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:43"
                              },
                              "name": "I press add",
                              "result": {
                                "duration": 27000,
                                "status": "passed"
                              }
                            },
                            {
                              "keyword": "Then ",
                              "line": 9,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:51"
                              },
                              "name": "the result should be 54 on the screen",
                              "result": {
                                "duration": 17000,
                                "status": "passed"
                              }
                            }
                          ],
                          "tags": [
                            {
                              "line": 1,
                              "name": "@REQ_REQ-123"
                            },
                            {
                              "line": 4,
                              "name": "@TEST_TEST-456"
                            }
                          ],
                          "type": "scenario"
                        },
                        {
                          "after": [
                            {
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:13"
                              },
                              "result": {
                                "duration": 6000,
                                "status": "passed"
                              }
                            }
                          ],
                          "before": [
                            {
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:9"
                              },
                              "result": {
                                "duration": 8000,
                                "status": "passed"
                              }
                            }
                          ],
                          "description": "",
                          "id": "as-a-user,-i-can-sum-two-numbers;;;6",
                          "keyword": "Scenario Outline",
                          "line": 17,
                          "name": "",
                          "steps": [
                            {
                              "keyword": "Given ",
                              "line": 6,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:39"
                              },
                              "name": "I have entered 5 into the calculator",
                              "result": {
                                "duration": 14000,
                                "status": "passed"
                              }
                            },
                            {
                              "keyword": "And ",
                              "line": 7,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:39"
                              },
                              "name": "I have entered 50 into the calculator",
                              "result": {
                                "duration": 9000,
                                "status": "passed"
                              }
                            },
                            {
                              "keyword": "When ",
                              "line": 8,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:43"
                              },
                              "name": "I press add",
                              "result": {
                                "duration": 11000,
                                "status": "passed"
                              }
                            },
                            {
                              "keyword": "Then ",
                              "line": 9,
                              "match": {
                                "location": "features/step_definitions/calculator_steps.rb:51"
                              },
                              "name": "the result should be 55 on the screen",
                              "result": {
                                "duration": 18000,
                                "status": "passed"
                              }
                            }
                          ],
                          "tags": [
                            {
                              "line": 1,
                              "name": "@REQ_REQ-123"
                            },
                            {
                              "line": 4,
                              "name": "@TEST-123"
                            }
                          ],
                          "type": "scenario"
                        }
                      ],
                      "id": "as-a-user,-i-can-sum-two-numbers",
                      "keyword": "Feature",
                      "line": 2,
                      "name": "As a user, I can sum two numbers",
                      "tags": [
                        {
                          "line": 1,
                          "name": "@REQ_REQ-123"
                        }
                      ],
                      "uri": "features/sample_scenario_outline.feature"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cucumber test execution results successfully imported. Returns import summary containing Test Execution key(s), processing statistics with scenario counts, step execution details, and any validation warnings for unmatched features or scenarios. Includes timing information and hook execution results."
          }
        }
      }
    },
    "/rest/raven/2.0/import/execution/behave": {
      "post": {
        "tags": [
          "import"
        ],
        "summary": "Import Behave test execution results",
        "description": "Imports Behave (Python BDD framework) test execution results from JSON format into Xray. Processes feature files execution output including scenarios, step definitions, execution status, and detailed failure information. Automatically maps Behave features and scenarios to Xray Test issues and creates comprehensive Test Execution reports.",
        "operationId": "importBehaveResults",
        "parameters": [
          {
            "name": "projectKey",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "MYPROJ"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "elements": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "keyword": {
                            "type": "string",
                            "example": "Scenario Outline"
                          },
                          "location": {
                            "type": "string",
                            "example": "features/sample_scenario_outline.feature:13"
                          },
                          "name": {
                            "type": "string",
                            "example": " -- @1.1 "
                          },
                          "status": {
                            "type": "string",
                            "example": "failed"
                          },
                          "steps": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "keyword": {
                                  "type": "string",
                                  "example": "Given"
                                },
                                "location": {
                                  "type": "string",
                                  "example": "features/sample_scenario_outline.feature:6"
                                },
                                "name": {
                                  "type": "string",
                                  "example": "I have entered 20 into the calculator"
                                },
                                "result": {
                                  "type": "object",
                                  "properties": {
                                    "duration": {
                                      "type": "number",
                                      "example": 0
                                    },
                                    "status": {
                                      "type": "string",
                                      "example": "undefined"
                                    }
                                  }
                                },
                                "step_type": {
                                  "type": "string",
                                  "example": "given"
                                }
                              }
                            },
                            "example": [
                              {
                                "keyword": "Given",
                                "location": "features/sample_scenario_outline.feature:6",
                                "name": "I have entered 20 into the calculator",
                                "result": {
                                  "duration": 0,
                                  "status": "undefined"
                                },
                                "step_type": "given"
                              },
                              {
                                "keyword": "And",
                                "location": "features/sample_scenario_outline.feature:7",
                                "name": "I have entered 30 into the calculator",
                                "step_type": "given"
                              },
                              {
                                "keyword": "When",
                                "location": "features/sample_scenario_outline.feature:8",
                                "name": "I press add",
                                "step_type": "when"
                              },
                              {
                                "keyword": "Then",
                                "location": "features/sample_scenario_outline.feature:9",
                                "name": "the result should be 50 on the screen",
                                "step_type": "then"
                              }
                            ]
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "TEST_TEST-456"
                            },
                            "example": [
                              "TEST_TEST-456"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "example": "scenario"
                          }
                        }
                      },
                      "example": [
                        {
                          "keyword": "Scenario Outline",
                          "location": "features/sample_scenario_outline.feature:13",
                          "name": " -- @1.1 ",
                          "status": "failed",
                          "steps": [
                            {
                              "keyword": "Given",
                              "location": "features/sample_scenario_outline.feature:6",
                              "name": "I have entered 20 into the calculator",
                              "result": {
                                "duration": 0,
                                "status": "undefined"
                              },
                              "step_type": "given"
                            },
                            {
                              "keyword": "And",
                              "location": "features/sample_scenario_outline.feature:7",
                              "name": "I have entered 30 into the calculator",
                              "step_type": "given"
                            },
                            {
                              "keyword": "When",
                              "location": "features/sample_scenario_outline.feature:8",
                              "name": "I press add",
                              "step_type": "when"
                            },
                            {
                              "keyword": "Then",
                              "location": "features/sample_scenario_outline.feature:9",
                              "name": "the result should be 50 on the screen",
                              "step_type": "then"
                            }
                          ],
                          "tags": [
                            "TEST_TEST-456"
                          ],
                          "type": "scenario"
                        },
                        {
                          "keyword": "Scenario Outline",
                          "location": "features/sample_scenario_outline.feature:14",
                          "name": " -- @1.2 ",
                          "status": "failed",
                          "steps": [
                            {
                              "keyword": "Given",
                              "location": "features/sample_scenario_outline.feature:6",
                              "name": "I have entered 2 into the calculator",
                              "result": {
                                "duration": 0,
                                "status": "undefined"
                              },
                              "step_type": "given"
                            },
                            {
                              "keyword": "And",
                              "location": "features/sample_scenario_outline.feature:7",
                              "name": "I have entered 5 into the calculator",
                              "step_type": "given"
                            },
                            {
                              "keyword": "When",
                              "location": "features/sample_scenario_outline.feature:8",
                              "name": "I press add",
                              "step_type": "when"
                            },
                            {
                              "keyword": "Then",
                              "location": "features/sample_scenario_outline.feature:9",
                              "name": "the result should be 7 on the screen",
                              "step_type": "then"
                            }
                          ],
                          "tags": [
                            "TEST_TEST-456"
                          ],
                          "type": "scenario"
                        },
                        {
                          "keyword": "Scenario Outline",
                          "location": "features/sample_scenario_outline.feature:15",
                          "name": " -- @1.3 ",
                          "status": "failed",
                          "steps": [
                            {
                              "keyword": "Given",
                              "location": "features/sample_scenario_outline.feature:6",
                              "name": "I have entered 0 into the calculator",
                              "result": {
                                "duration": 0,
                                "status": "undefined"
                              },
                              "step_type": "given"
                            },
                            {
                              "keyword": "And",
                              "location": "features/sample_scenario_outline.feature:7",
                              "name": "I have entered 40 into the calculator",
                              "step_type": "given"
                            },
                            {
                              "keyword": "When",
                              "location": "features/sample_scenario_outline.feature:8",
                              "name": "I press add",
                              "step_type": "when"
                            },
                            {
                              "keyword": "Then",
                              "location": "features/sample_scenario_outline.feature:9",
                              "name": "the result should be 40 on the screen",
                              "step_type": "then"
                            }
                          ],
                          "tags": [
                            "TEST_TEST-456"
                          ],
                          "type": "scenario"
                        },
                        {
                          "keyword": "Scenario Outline",
                          "location": "features/sample_scenario_outline.feature:16",
                          "name": " -- @1.4 ",
                          "status": "failed",
                          "steps": [
                            {
                              "keyword": "Given",
                              "location": "features/sample_scenario_outline.feature:6",
                              "name": "I have entered 4 into the calculator",
                              "result": {
                                "duration": 0,
                                "status": "undefined"
                              },
                              "step_type": "given"
                            },
                            {
                              "keyword": "And",
                              "location": "features/sample_scenario_outline.feature:7",
                              "name": "I have entered 50 into the calculator",
                              "step_type": "given"
                            },
                            {
                              "keyword": "When",
                              "location": "features/sample_scenario_outline.feature:8",
                              "name": "I press add",
                              "step_type": "when"
                            },
                            {
                              "keyword": "Then",
                              "location": "features/sample_scenario_outline.feature:9",
                              "name": "the result should be 54 on the screen",
                              "step_type": "then"
                            }
                          ],
                          "tags": [
                            "TEST_TEST-456"
                          ],
                          "type": "scenario"
                        },
                        {
                          "keyword": "Scenario Outline",
                          "location": "features/sample_scenario_outline.feature:17",
                          "name": " -- @1.5 ",
                          "status": "failed",
                          "steps": [
                            {
                              "keyword": "Given",
                              "location": "features/sample_scenario_outline.feature:6",
                              "name": "I have entered 5 into the calculator",
                              "result": {
                                "duration": 0,
                                "status": "undefined"
                              },
                              "step_type": "given"
                            },
                            {
                              "keyword": "And",
                              "location": "features/sample_scenario_outline.feature:7",
                              "name": "I have entered 50 into the calculator",
                              "step_type": "given"
                            },
                            {
                              "keyword": "When",
                              "location": "features/sample_scenario_outline.feature:8",
                              "name": "I press add",
                              "step_type": "when"
                            },
                            {
                              "keyword": "Then",
                              "location": "features/sample_scenario_outline.feature:9",
                              "name": "the result should be 55 on the screen",
                              "step_type": "then"
                            }
                          ],
                          "tags": [
                            "TEST_TEST-456"
                          ],
                          "type": "scenario"
                        }
                      ]
                    },
                    "keyword": {
                      "type": "string",
                      "example": "Feature"
                    },
                    "location": {
                      "type": "string",
                      "example": "features/sample_scenario_outline.feature:2"
                    },
                    "name": {
                      "type": "string",
                      "example": "As a user, I can sum two numbers"
                    },
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "REQ_REQ-123"
                      },
                      "example": [
                        "REQ_REQ-123"
                      ]
                    }
                  }
                },
                "example": [
                  {
                    "elements": [
                      {
                        "keyword": "Scenario Outline",
                        "location": "features/sample_scenario_outline.feature:13",
                        "name": " -- @1.1 ",
                        "status": "failed",
                        "steps": [
                          {
                            "keyword": "Given",
                            "location": "features/sample_scenario_outline.feature:6",
                            "name": "I have entered 20 into the calculator",
                            "result": {
                              "duration": 0,
                              "status": "undefined"
                            },
                            "step_type": "given"
                          },
                          {
                            "keyword": "And",
                            "location": "features/sample_scenario_outline.feature:7",
                            "name": "I have entered 30 into the calculator",
                            "step_type": "given"
                          },
                          {
                            "keyword": "When",
                            "location": "features/sample_scenario_outline.feature:8",
                            "name": "I press add",
                            "step_type": "when"
                          },
                          {
                            "keyword": "Then",
                            "location": "features/sample_scenario_outline.feature:9",
                            "name": "the result should be 50 on the screen",
                            "step_type": "then"
                          }
                        ],
                        "tags": [
                          "TEST_TEST-456"
                        ],
                        "type": "scenario"
                      },
                      {
                        "keyword": "Scenario Outline",
                        "location": "features/sample_scenario_outline.feature:14",
                        "name": " -- @1.2 ",
                        "status": "failed",
                        "steps": [
                          {
                            "keyword": "Given",
                            "location": "features/sample_scenario_outline.feature:6",
                            "name": "I have entered 2 into the calculator",
                            "result": {
                              "duration": 0,
                              "status": "undefined"
                            },
                            "step_type": "given"
                          },
                          {
                            "keyword": "And",
                            "location": "features/sample_scenario_outline.feature:7",
                            "name": "I have entered 5 into the calculator",
                            "step_type": "given"
                          },
                          {
                            "keyword": "When",
                            "location": "features/sample_scenario_outline.feature:8",
                            "name": "I press add",
                            "step_type": "when"
                          },
                          {
                            "keyword": "Then",
                            "location": "features/sample_scenario_outline.feature:9",
                            "name": "the result should be 7 on the screen",
                            "step_type": "then"
                          }
                        ],
                        "tags": [
                          "TEST_TEST-456"
                        ],
                        "type": "scenario"
                      },
                      {
                        "keyword": "Scenario Outline",
                        "location": "features/sample_scenario_outline.feature:15",
                        "name": " -- @1.3 ",
                        "status": "failed",
                        "steps": [
                          {
                            "keyword": "Given",
                            "location": "features/sample_scenario_outline.feature:6",
                            "name": "I have entered 0 into the calculator",
                            "result": {
                              "duration": 0,
                              "status": "undefined"
                            },
                            "step_type": "given"
                          },
                          {
                            "keyword": "And",
                            "location": "features/sample_scenario_outline.feature:7",
                            "name": "I have entered 40 into the calculator",
                            "step_type": "given"
                          },
                          {
                            "keyword": "When",
                            "location": "features/sample_scenario_outline.feature:8",
                            "name": "I press add",
                            "step_type": "when"
                          },
                          {
                            "keyword": "Then",
                            "location": "features/sample_scenario_outline.feature:9",
                            "name": "the result should be 40 on the screen",
                            "step_type": "then"
                          }
                        ],
                        "tags": [
                          "TEST_TEST-456"
                        ],
                        "type": "scenario"
                      },
                      {
                        "keyword": "Scenario Outline",
                        "location": "features/sample_scenario_outline.feature:16",
                        "name": " -- @1.4 ",
                        "status": "failed",
                        "steps": [
                          {
                            "keyword": "Given",
                            "location": "features/sample_scenario_outline.feature:6",
                            "name": "I have entered 4 into the calculator",
                            "result": {
                              "duration": 0,
                              "status": "undefined"
                            },
                            "step_type": "given"
                          },
                          {
                            "keyword": "And",
                            "location": "features/sample_scenario_outline.feature:7",
                            "name": "I have entered 50 into the calculator",
                            "step_type": "given"
                          },
                          {
                            "keyword": "When",
                            "location": "features/sample_scenario_outline.feature:8",
                            "name": "I press add",
                            "step_type": "when"
                          },
                          {
                            "keyword": "Then",
                            "location": "features/sample_scenario_outline.feature:9",
                            "name": "the result should be 54 on the screen",
                            "step_type": "then"
                          }
                        ],
                        "tags": [
                          "TEST_TEST-456"
                        ],
                        "type": "scenario"
                      },
                      {
                        "keyword": "Scenario Outline",
                        "location": "features/sample_scenario_outline.feature:17",
                        "name": " -- @1.5 ",
                        "status": "failed",
                        "steps": [
                          {
                            "keyword": "Given",
                            "location": "features/sample_scenario_outline.feature:6",
                            "name": "I have entered 5 into the calculator",
                            "result": {
                              "duration": 0,
                              "status": "undefined"
                            },
                            "step_type": "given"
                          },
                          {
                            "keyword": "And",
                            "location": "features/sample_scenario_outline.feature:7",
                            "name": "I have entered 50 into the calculator",
                            "step_type": "given"
                          },
                          {
                            "keyword": "When",
                            "location": "features/sample_scenario_outline.feature:8",
                            "name": "I press add",
                            "step_type": "when"
                          },
                          {
                            "keyword": "Then",
                            "location": "features/sample_scenario_outline.feature:9",
                            "name": "the result should be 55 on the screen",
                            "step_type": "then"
                          }
                        ],
                        "tags": [
                          "TEST_TEST-456"
                        ],
                        "type": "scenario"
                      }
                    ],
                    "keyword": "Feature",
                    "location": "features/sample_scenario_outline.feature:2",
                    "name": "As a user, I can sum two numbers",
                    "status": "failed",
                    "tags": [
                      "REQ_REQ-123"
                    ]
                  }
                ]
              },
              "examples": {
                "standard Behave endpoint": {
                  "value": [
                    {
                      "elements": [
                        {
                          "keyword": "Scenario Outline",
                          "location": "features/sample_scenario_outline.feature:13",
                          "name": " -- @1.1 ",
                          "status": "failed",
                          "steps": [
                            {
                              "keyword": "Given",
                              "location": "features/sample_scenario_outline.feature:6",
                              "name": "I have entered 20 into the calculator",
                              "result": {
                                "duration": 0,
                                "status": "undefined"
                              },
                              "step_type": "given"
                            },
                            {
                              "keyword": "And",
                              "location": "features/sample_scenario_outline.feature:7",
                              "name": "I have entered 30 into the calculator",
                              "step_type": "given"
                            },
                            {
                              "keyword": "When",
                              "location": "features/sample_scenario_outline.feature:8",
                              "name": "I press add",
                              "step_type": "when"
                            },
                            {
                              "keyword": "Then",
                              "location": "features/sample_scenario_outline.feature:9",
                              "name": "the result should be 50 on the screen",
                              "step_type": "then"
                            }
                          ],
                          "tags": [
                            "TEST_TEST-456"
                          ],
                          "type": "scenario"
                        },
                        {
                          "keyword": "Scenario Outline",
                          "location": "features/sample_scenario_outline.feature:14",
                          "name": " -- @1.2 ",
                          "status": "failed",
                          "steps": [
                            {
                              "keyword": "Given",
                              "location": "features/sample_scenario_outline.feature:6",
                              "name": "I have entered 2 into the calculator",
                              "result": {
                                "duration": 0,
                                "status": "undefined"
                              },
                              "step_type": "given"
                            },
                            {
                              "keyword": "And",
                              "location": "features/sample_scenario_outline.feature:7",
                              "name": "I have entered 5 into the calculator",
                              "step_type": "given"
                            },
                            {
                              "keyword": "When",
                              "location": "features/sample_scenario_outline.feature:8",
                              "name": "I press add",
                              "step_type": "when"
                            },
                            {
                              "keyword": "Then",
                              "location": "features/sample_scenario_outline.feature:9",
                              "name": "the result should be 7 on the screen",
                              "step_type": "then"
                            }
                          ],
                          "tags": [
                            "TEST_TEST-456"
                          ],
                          "type": "scenario"
                        },
                        {
                          "keyword": "Scenario Outline",
                          "location": "features/sample_scenario_outline.feature:15",
                          "name": " -- @1.3 ",
                          "status": "failed",
                          "steps": [
                            {
                              "keyword": "Given",
                              "location": "features/sample_scenario_outline.feature:6",
                              "name": "I have entered 0 into the calculator",
                              "result": {
                                "duration": 0,
                                "status": "undefined"
                              },
                              "step_type": "given"
                            },
                            {
                              "keyword": "And",
                              "location": "features/sample_scenario_outline.feature:7",
                              "name": "I have entered 40 into the calculator",
                              "step_type": "given"
                            },
                            {
                              "keyword": "When",
                              "location": "features/sample_scenario_outline.feature:8",
                              "name": "I press add",
                              "step_type": "when"
                            },
                            {
                              "keyword": "Then",
                              "location": "features/sample_scenario_outline.feature:9",
                              "name": "the result should be 40 on the screen",
                              "step_type": "then"
                            }
                          ],
                          "tags": [
                            "TEST_TEST-456"
                          ],
                          "type": "scenario"
                        },
                        {
                          "keyword": "Scenario Outline",
                          "location": "features/sample_scenario_outline.feature:16",
                          "name": " -- @1.4 ",
                          "status": "failed",
                          "steps": [
                            {
                              "keyword": "Given",
                              "location": "features/sample_scenario_outline.feature:6",
                              "name": "I have entered 4 into the calculator",
                              "result": {
                                "duration": 0,
                                "status": "undefined"
                              },
                              "step_type": "given"
                            },
                            {
                              "keyword": "And",
                              "location": "features/sample_scenario_outline.feature:7",
                              "name": "I have entered 50 into the calculator",
                              "step_type": "given"
                            },
                            {
                              "keyword": "When",
                              "location": "features/sample_scenario_outline.feature:8",
                              "name": "I press add",
                              "step_type": "when"
                            },
                            {
                              "keyword": "Then",
                              "location": "features/sample_scenario_outline.feature:9",
                              "name": "the result should be 54 on the screen",
                              "step_type": "then"
                            }
                          ],
                          "tags": [
                            "TEST_TEST-456"
                          ],
                          "type": "scenario"
                        },
                        {
                          "keyword": "Scenario Outline",
                          "location": "features/sample_scenario_outline.feature:17",
                          "name": " -- @1.5 ",
                          "status": "failed",
                          "steps": [
                            {
                              "keyword": "Given",
                              "location": "features/sample_scenario_outline.feature:6",
                              "name": "I have entered 5 into the calculator",
                              "result": {
                                "duration": 0,
                                "status": "undefined"
                              },
                              "step_type": "given"
                            },
                            {
                              "keyword": "And",
                              "location": "features/sample_scenario_outline.feature:7",
                              "name": "I have entered 50 into the calculator",
                              "step_type": "given"
                            },
                            {
                              "keyword": "When",
                              "location": "features/sample_scenario_outline.feature:8",
                              "name": "I press add",
                              "step_type": "when"
                            },
                            {
                              "keyword": "Then",
                              "location": "features/sample_scenario_outline.feature:9",
                              "name": "the result should be 55 on the screen",
                              "step_type": "then"
                            }
                          ],
                          "tags": [
                            "TEST_TEST-456"
                          ],
                          "type": "scenario"
                        }
                      ],
                      "keyword": "Feature",
                      "location": "features/sample_scenario_outline.feature:2",
                      "name": "As a user, I can sum two numbers",
                      "status": "failed",
                      "tags": [
                        "REQ_REQ-123"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/rest/raven/2.0/import/execution/junit": {
      "post": {
        "tags": [
          "import"
        ],
        "summary": "Import JUnit test execution results",
        "description": "Imports JUnit test execution results from XML format into Xray. Processes JUnit XML reports including test classes, test methods, execution times, assertions, and failure details with stack traces. Automatically creates or updates Test Executions and Test Runs, matching tests by their fully qualified class and method names. Supports JUnit 4 and 5 XML formats.",
        "operationId": "importJunitResults",
        "parameters": [
          {
            "name": "projectKey",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "MYPROJ"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/rest/raven/2.0/import/execution/testng": {
      "post": {
        "tags": [
          "import"
        ],
        "summary": "standard TestNG endpoint",
        "description": "standard TestNG endpoint",
        "operationId": "importTestngResults",
        "parameters": [
          {
            "name": "projectKey",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "MYPROJ"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NUnit test execution results successfully imported. Returns import summary with details about created/updated Test Executions, Test Runs, and any parsing warnings or errors. The response includes the Test Execution key(s) created in Xray and statistics about the imported test results."
          }
        }
      }
    },
    "/rest/raven/2.0/import/execution/nunit": {
      "post": {
        "tags": [
          "import"
        ],
        "summary": "Import NUnit test execution results",
        "description": "Imports NUnit test execution results from XML files into Xray. This endpoint processes NUnit result files and automatically creates or updates Test Executions and Test Runs in Jira. Tests are matched by their fully qualified names, and new Test issues are created if no matching tests exist. Supports NUnit 2.x and 3.x XML formats with detailed test step results, execution times, and failure information.",
        "operationId": "importNunitResults",
        "parameters": [
          {
            "name": "projectKey",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "MYPROJ"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NUnit test execution results successfully imported. Returns a JSON object containing the Test Execution key(s) created or updated, import statistics including number of tests processed, execution summary with pass/fail counts, and any warnings about unmatched tests or parsing issues."
          }
        }
      }
    },
    "/rest/raven/2.0/import/execution/robot": {
      "post": {
        "tags": [
          "import"
        ],
        "summary": "Import standard Robot Framework endpoint",
        "description": "Import standard Robot Framework endpoint",
        "operationId": "importRobotResults",
        "parameters": [
          {
            "name": "projectKey",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "MYPROJ"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/rest/raven/2.0/api/testruns": {
      "get": {
        "tags": [
          "test run"
        ],
        "summary": "List test runs",
        "description": "Retrieves all the Test Runs from a given context (paginated). You can obtain Test Runs in one of the following contexts: in a Test Execution issue (optionally filtered by Test issue key), in a Test Plan issue, or in a JQL filter that returns Test Execution issues.",
        "operationId": "listTestRuns",
        "parameters": [
          {
            "name": "testExecKey",
            "in": "query",
            "description": "The Test Execution issue key.",
            "schema": {
              "type": "string",
              "example": "EXEC-123"
            }
          },
          {
            "name": "testKey",
            "in": "query",
            "description": "The Test issue key (can only be used with testExecKey).",
            "schema": {
              "type": "string",
              "example": "TEST-123"
            }
          },
          {
            "name": "testPlanKey",
            "in": "query",
            "description": "The Test Plan issue key.",
            "schema": {
              "type": "string",
              "example": "PLAN-123"
            }
          },
          {
            "name": "includeTestFields",
            "in": "query",
            "description": "Comma-separated list of custom fields of the Test issue to return.",
            "schema": {
              "type": "string",
              "example": "customfield_10010,customfield_10011"
            }
          },
          {
            "name": "savedFilterId",
            "in": "query",
            "description": "The Jira JQL filter ID or name containing Test Execution issues.",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of Test Runs to return.",
            "schema": {
              "type": "integer",
              "example": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number of results.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a JSON array of Test Runs.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/rest/raven/2.0/import/feature": {
      "post": {
        "tags": [
          "import"
        ],
        "summary": "Import cucumber tests and background from a .feature",
        "description": "Import cucumber tests and background from a .feature",
        "operationId": "importCucumberTestsAndBackgroundFromAFeature",
        "parameters": [
          {
            "name": "projectKey",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "MYPROJ"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/rest/raven/2.0/export/test": {
      "get": {
        "tags": [
          "export"
        ],
        "summary": "Export cucumber tests, as .feature",
        "description": "Export cucumber tests, as .feature",
        "operationId": "listCucumberTestsAsFeature",
        "parameters": [
          {
            "name": "keys",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "TEST-123"
            }
          },
          {
            "name": "fz",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "false"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/rest/raven/2.0/api/project/{projectId}/settings/customfields/teststeps": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Get custom fields for test steps",
        "description": "Retrives the configuration of the Test Step custom fields for a project, given the project id. <br/><br/> The response contains all information related to the custom fields, such as id, name, description, if the field is require and enable. In the case of optional custom fields (Multiple and Single Select Fields and Radio Buttons), the list of the custom field options is also retrieved.",
        "operationId": "getCustomFieldsForTestSteps",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "name": "projectId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the Jira project",
          "schema": {
            "type": "string",
            "example": "10001"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/project/{projectId}/settings/customfields/testruns": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Get custom fields for test runs",
        "description": "Retrives the configuration of the Test Run custom fields for a project, given the project id. <br/><br/> The response contains all information related to the custom fields, such as id, name, description, if the field is require and enable, and the test types the custom field is associated with. In the case of optional custom fields (Multiple and Single Select Fields and Radio Buttons), the list of the custom field options is also retrieved.",
        "operationId": "getCustomFieldsForTestRuns",
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "name": "projectId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the Jira project",
          "schema": {
            "type": "string",
            "example": "10001"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/settings/teststepstatuses": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Get possible test step statuses from configuration",
        "description": "Get possible test step statuses from configuration",
        "operationId": "getTestStepStatuses",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/rest/raven/2.0/api/settings/teststatuses": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Get configured test execution statuses",
        "description": "Retrieves all possible test execution statuses configured in the Xray global settings. Returns both built-in statuses (TODO, EXECUTING, PASS, FAIL, ABORTED) and any custom statuses defined by administrators. This information is essential for validating status transitions and building status-aware integrations.",
        "operationId": "getTestStatuses",
        "responses": {
          "200": {
            "description": "Successfully retrieved test status configuration. Returns an array of status objects containing status names, IDs, descriptions, color coding, and transition rules. Includes information about which statuses are considered final states and their hierarchical relationships."
          }
        }
      }
    },
    "/rest/raven/2.0/api/testrun/{testRunId}/iteration": {
      "get": {
        "tags": [
          "test run"
        ],
        "summary": "Get all iterations for a test run",
        "description": "Retrieves all iterations associated with a Test Run for data-driven testing scenarios. Each iteration represents a single execution cycle with different test data parameters. Returns iteration details including status, execution results, and parameter values used during each iteration.",
        "operationId": "getTestRunIterations",
        "responses": {
          "200": {
            "description": "Test Run iterations successfully retrieved. Returns an array of iteration objects, each containing iteration ID, execution status, parameter values, step results, and associated evidence for data-driven test execution analysis."
          }
        }
      },
      "post": {
        "tags": [
          "test run"
        ],
        "summary": "Create a new iteration for a test run",
        "description": "Creates a new iteration for data-driven Test Run execution. Iterations enable running the same test with different parameter sets, essential for comprehensive data-driven testing workflows. Each iteration maintains independent execution status and results.",
        "operationId": "createTestRunIteration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "parameters": {
                    "type": "object",
                    "description": "Parameter values for this iteration",
                    "example": {
                      "username": "testuser1",
                      "password": "password123",
                      "environment": "staging"
                    }
                  },
                  "name": {
                    "type": "string",
                    "description": "Optional name for the iteration",
                    "example": "User Login - Valid Credentials"
                  }
                },
                "required": ["parameters"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Test Run iteration successfully created. Returns the new iteration object with assigned ID, parameter values, and initial execution status ready for test execution."
          }
        }
      },
      "parameters": [
        {
          "name": "testRunId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the test run",
          "schema": {
            "type": "string",
            "example": "10001"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/testrun/{testRunId}/iteration/{iterationId}": {
      "get": {
        "tags": [
          "test run"
        ],
        "summary": "Get specific iteration details",
        "description": "Retrieves detailed information for a specific Test Run iteration including execution status, parameter values, step-by-step results, defects, and evidence attachments. Essential for analyzing individual iteration outcomes in data-driven testing scenarios.",
        "operationId": "getTestRunIteration",
        "responses": {
          "200": {
            "description": "Test Run iteration details successfully retrieved. Returns comprehensive iteration information including execution status, parameter values used, step results with evidence, defect associations, and execution timing data."
          }
        }
      },
      "put": {
        "tags": [
          "test run"
        ],
        "summary": "Update iteration details and status",
        "description": "Updates a specific Test Run iteration with new execution results, status changes, parameter modifications, or additional evidence. Supports updating iteration-level status, step results, and associated metadata for comprehensive iteration management.",
        "operationId": "updateTestRunIteration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["TODO", "EXECUTING", "PASS", "FAIL", "ABORTED"],
                    "description": "Execution status of the iteration",
                    "example": "PASS"
                  },
                  "parameters": {
                    "type": "object",
                    "description": "Updated parameter values for this iteration",
                    "example": {
                      "username": "testuser1",
                      "password": "newpassword456",
                      "environment": "production"
                    }
                  },
                  "comment": {
                    "type": "string",
                    "description": "Execution comment or notes",
                    "example": "All assertions passed with production data"
                  },
                  "stepResults": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "stepId": {
                          "type": "string",
                          "example": "12345"
                        },
                        "status": {
                          "type": "string",
                          "enum": ["PASS", "FAIL", "TODO"],
                          "example": "PASS"
                        },
                        "actualResult": {
                          "type": "string",
                          "example": "Login successful with valid credentials"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Test Run iteration successfully updated. Returns the updated iteration with new status, parameter values, step results, and execution metadata."
          }
        }
      },
      "delete": {
        "tags": [
          "test run"
        ],
        "summary": "Delete a specific iteration",
        "description": "Deletes a specific Test Run iteration and all associated execution data including step results, evidence attachments, and parameter values. Use with caution as this permanently removes iteration execution history.",
        "operationId": "deleteTestRunIteration",
        "responses": {
          "200": {
            "description": "Test Run iteration successfully deleted. The specified iteration and all associated execution data have been permanently removed."
          }
        }
      },
      "parameters": [
        {
          "name": "testRunId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the test run",
          "schema": {
            "type": "string",
            "example": "10001"
          }
        },
        {
          "name": "iterationId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the iteration",
          "schema": {
            "type": "string",
            "example": "20001"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/testrun/{testRunId}/iteration/{iterationId}/step/{stepId}": {
      "get": {
        "tags": [
          "test run"
        ],
        "summary": "Get iteration step execution details",
        "description": "Retrieves detailed execution information for a specific step within a Test Run iteration. Returns step-level results including status, actual results, evidence attachments, and parameter substitutions used during iteration execution.",
        "operationId": "getTestRunIterationStep",
        "responses": {
          "200": {
            "description": "Iteration step details successfully retrieved. Returns step execution status, actual results, evidence attachments, and parameter values used for this specific step within the iteration."
          }
        }
      },
      "put": {
        "tags": [
          "test run"
        ],
        "summary": "Update iteration step execution results",
        "description": "Updates execution results for a specific step within a Test Run iteration. Allows updating step status, actual results, evidence, and step-level comments for granular iteration execution tracking.",
        "operationId": "updateTestRunIterationStep",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["PASS", "FAIL", "TODO"],
                    "description": "Execution status of the step",
                    "example": "PASS"
                  },
                  "actualResult": {
                    "type": "string",
                    "description": "Actual execution result",
                    "example": "User successfully logged in with credentials: testuser1/password123"
                  },
                  "comment": {
                    "type": "string",
                    "description": "Step execution comment",
                    "example": "Login completed in 2.3 seconds"
                  },
                  "evidence": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "filename": {
                          "type": "string",
                          "example": "login_screenshot.png"
                        },
                        "data": {
                          "type": "string",
                          "format": "base64",
                          "example": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mP8/5+hHgAHggJ/PchI7wAAAABJRU5ErkJggg=="
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Iteration step execution results successfully updated. Returns the updated step with new status, actual results, and evidence attachments."
          }
        }
      },
      "parameters": [
        {
          "name": "testRunId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the test run",
          "schema": {
            "type": "string",
            "example": "10001"
          }
        },
        {
          "name": "iterationId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the iteration",
          "schema": {
            "type": "string",
            "example": "20001"
          }
        },
        {
          "name": "stepId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the test step",
          "schema": {
            "type": "string",
            "example": "30001"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/dataset/export": {
      "get": {
        "tags": [
          "dataset"
        ],
        "summary": "Export test datasets",
        "description": "Exports test datasets used for data-driven testing scenarios. Returns dataset definitions including parameter names, data rows, and associated test mappings. Supports multiple export formats for integration with external test automation tools.",
        "operationId": "exportTestDatasets",
        "parameters": [
          {
            "name": "datasetId",
            "in": "query",
            "description": "Specific dataset ID to export",
            "schema": {
              "type": "string",
              "example": "DATASET-123"
            }
          },
          {
            "name": "projectKey",
            "in": "query",
            "description": "Project key to filter datasets",
            "schema": {
              "type": "string",
              "example": "PROJ"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Export format",
            "schema": {
              "type": "string",
              "enum": ["json", "csv", "xml"],
              "default": "json",
              "example": "json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Test datasets successfully exported. Returns dataset definitions with parameter schemas, data rows, and test associations in the requested format for data-driven test automation."
          }
        }
      }
    },
    "/rest/raven/2.0/api/dataset/import": {
      "post": {
        "tags": [
          "dataset"
        ],
        "summary": "Import test datasets",
        "description": "Imports test datasets for data-driven testing scenarios. Accepts dataset definitions with parameter schemas and data rows. Supports bulk import operations and validation of dataset structures against existing test definitions.",
        "operationId": "importTestDatasets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "datasets": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Dataset name",
                          "example": "User Login Test Data"
                        },
                        "description": {
                          "type": "string",
                          "description": "Dataset description",
                          "example": "Test data for user authentication scenarios"
                        },
                        "parameters": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "username"
                              },
                              "type": {
                                "type": "string",
                                "enum": ["string", "number", "boolean", "date"],
                                "example": "string"
                              }
                            }
                          }
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Data rows with parameter values",
                            "example": {
                              "username": "testuser1",
                              "password": "password123",
                              "expected_result": "success"
                            }
                          }
                        }
                      },
                      "required": ["name", "parameters", "data"]
                    }
                  },
                  "projectKey": {
                    "type": "string",
                    "description": "Target project for dataset import",
                    "example": "PROJ"
                  }
                },
                "required": ["datasets"]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "CSV or Excel file containing dataset"
                  },
                  "projectKey": {
                    "type": "string",
                    "example": "PROJ"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Test datasets successfully imported. Returns created dataset IDs and validation results for imported data structures."
          },
          "400": {
            "description": "Invalid dataset format or validation errors in the imported data."
          }
        }
      }
    },
    "/rest/raven/2.0/api/testrunstatus/reset": {
      "put": {
        "tags": [
          "test run"
        ],
        "summary": "Reset test run statuses in bulk",
        "description": "Resets execution status for multiple Test Runs back to TODO status. Useful for re-executing test suites, clearing previous execution results, or preparing test runs for new execution cycles. Supports filtering by project, test plan, or test execution.",
        "operationId": "resetTestRunStatuses",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "testRunIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specific test run IDs to reset",
                    "example": ["10001", "10002", "10003"]
                  },
                  "testExecutionKey": {
                    "type": "string",
                    "description": "Reset all test runs in a test execution",
                    "example": "EXEC-123"
                  },
                  "testPlanKey": {
                    "type": "string",
                    "description": "Reset all test runs in a test plan",
                    "example": "PLAN-123"
                  },
                  "projectKey": {
                    "type": "string",
                    "description": "Reset all test runs in a project",
                    "example": "PROJ"
                  },
                  "preserveEvidence": {
                    "type": "boolean",
                    "description": "Whether to preserve evidence attachments",
                    "default": false,
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Test Run statuses successfully reset. Returns count of affected test runs and summary of reset operations performed."
          }
        }
      }
    },
    "/rest/raven/2.0/api/requirementstatus/reset": {
      "put": {
        "tags": [
          "requirements"
        ],
        "summary": "Reset requirement statuses in bulk",
        "description": "Resets requirement status calculations and coverage metrics for multiple requirements. Useful for recalculating requirement coverage after test modifications, clearing cached status data, or refreshing requirement-test traceability matrices.",
        "operationId": "resetRequirementStatuses",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "requirementKeys": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specific requirement keys to reset",
                    "example": ["REQ-123", "REQ-456", "REQ-789"]
                  },
                  "projectKey": {
                    "type": "string",
                    "description": "Reset all requirements in a project",
                    "example": "PROJ"
                  },
                  "recalculateCoverage": {
                    "type": "boolean",
                    "description": "Whether to recalculate test coverage",
                    "default": true,
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Requirement statuses successfully reset. Returns count of affected requirements and summary of coverage recalculation results."
          }
        }
      }
    },
    "/rest/raven/2.0/api/test/{testKey}/version": {
      "get": {
        "tags": [
          "test"
        ],
        "summary": "Get test version information",
        "description": "Retrieves version information for a specific test including version history, current version number, and change tracking details. Essential for test versioning and change management workflows.",
        "operationId": "getTestVersion",
        "responses": {
          "200": {
            "description": "Test version information successfully retrieved. Returns current version, version history, and change tracking metadata."
          }
        }
      },
      "parameters": [
        {
          "name": "testKey",
          "in": "path",
          "required": true,
          "description": "The key of the test issue",
          "schema": {
            "type": "string",
            "example": "TEST-123"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/testexecution/{testExecutionKey}/testrun/bulk": {
      "post": {
        "tags": [
          "test execution"
        ],
        "summary": "Bulk update test run statuses",
        "description": "Updates execution status for multiple test runs within a test execution in a single operation. Supports bulk status changes, comments, and evidence attachment for efficient test execution management.",
        "operationId": "bulkUpdateTestRunStatuses",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "testRuns": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "testRunId": {
                          "type": "string",
                          "example": "10001"
                        },
                        "status": {
                          "type": "string",
                          "enum": ["TODO", "EXECUTING", "PASS", "FAIL", "ABORTED"],
                          "example": "PASS"
                        },
                        "comment": {
                          "type": "string",
                          "example": "All test steps completed successfully"
                        }
                      },
                      "required": ["testRunId", "status"]
                    }
                  }
                },
                "required": ["testRuns"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Test run statuses successfully updated in bulk. Returns summary of updated test runs and any validation errors."
          }
        }
      },
      "parameters": [
        {
          "name": "testExecutionKey",
          "in": "path",
          "required": true,
          "description": "The key of the test execution issue",
          "schema": {
            "type": "string",
            "example": "EXEC-123"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/license": {
      "get": {
        "tags": [
          "license"
        ],
        "summary": "Get Xray license information",
        "description": "Retrieves current Xray license information including license type, expiration date, user limits, and feature availability. Used for system administration and license compliance monitoring.",
        "operationId": "getLicenseInfo",
        "responses": {
          "200": {
            "description": "License information successfully retrieved. Returns license details, user counts, feature limitations, and expiration status."
          }
        }
      }
    },
    "/rest/raven/2.0/api/settings/global": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Get global Xray settings",
        "description": "Retrieves global Xray configuration settings that apply across all projects. Includes default behaviors, system-wide preferences, and global feature configurations.",
        "operationId": "getGlobalSettings",
        "responses": {
          "200": {
            "description": "Global settings successfully retrieved. Returns system-wide configuration options and default behaviors."
          }
        }
      },
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Update global Xray settings",
        "description": "Updates global Xray configuration settings. Requires administrator privileges. Changes affect all projects unless overridden at project level.",
        "operationId": "updateGlobalSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "defaultTestType": {
                    "type": "string",
                    "example": "Manual"
                  },
                  "enableTestCoverage": {
                    "type": "boolean",
                    "example": true
                  },
                  "defaultExecutionStatus": {
                    "type": "string",
                    "example": "TODO"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Global settings successfully updated. Returns confirmation of applied changes."
          }
        }
      }
    },
    "/rest/raven/2.0/api/settings/project/{projectKey}": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "get project-specific Xray settings",
        "description": "Retrieves Xray configuration settings specific to a project. These settings override global defaults and control project-level behavior for test management features.",
        "operationId": "getProjectSettings",
        "responses": {
          "200": {
            "description": "Project settings successfully retrieved. Returns project-specific configuration options and overrides."
          }
        }
      },
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "Update project-specific Xray settings",
        "description": "Updates Xray configuration settings for a specific project. Requires project administration privileges. Settings override global defaults for this project only.",
        "operationId": "updateProjectSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "test repository": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "example": true
                      },
                      "allowFolderCreation": {
                        "type": "boolean",
                        "example": true
                      }
                    }
                  },
                  "testExecution": {
                    "type": "object",
                    "properties": {
                      "autoAssignee": {
                        "type": "boolean",
                        "example": false
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Project settings successfully updated. Returns confirmation of applied changes."
          }
        }
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "description": "The key of the project",
          "schema": {
            "type": "string",
            "example": "PROJ"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/issuetypes/project/{projectKey}": {
      "get": {
        "tags": [
          "issue types"
        ],
        "summary": "Get Xray issue types for project",
        "description": "Retrieves all Xray-specific issue types available in a project including Test, Test Set, Test Plan, Test Execution, Precondition, and any custom test-related issue types configured for the project.",
        "operationId": "getProjectIssueTypes",
        "responses": {
          "200": {
            "description": "Project issue types successfully retrieved. Returns list of available Xray issue types with their configurations and field mappings."
          }
        }
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "description": "The key of the project",
          "schema": {
            "type": "string",
            "example": "PROJ"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/testexecution/{testExecutionKey}/environment": {
      "get": {
        "tags": [
          "test execution"
        ],
        "summary": "Get test execution environments",
        "description": "Retrieves all test environments associated with a Test Execution. Test environments define the configuration context (browser, OS, device, etc.) under which tests are executed.",
        "operationId": "getTestExecutionEnvironments",
        "responses": {
          "200": {
            "description": "Test execution environments successfully retrieved. Returns list of environment configurations and their association details."
          }
        }
      },
      "post": {
        "tags": [
          "test execution"
        ],
        "summary": "Add test environments to execution",
        "description": "Associates one or more test environments with a Test Execution. Test environments help categorize and filter test results based on execution context.",
        "operationId": "addTestExecutionEnvironments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "environments": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of environment names to associate",
                    "example": ["Chrome", "Firefox", "Safari"]
                  }
                },
                "required": ["environments"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Test environments successfully added to execution. Returns updated environment associations."
          }
        }
      },
      "parameters": [
        {
          "name": "testExecutionKey",
          "in": "path",
          "required": true,
          "description": "The key of the test execution issue",
          "schema": {
            "type": "string",
            "example": "EXEC-123"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/testplan/{testPlanKey}/environment": {
      "get": {
        "tags": [
          "test plan"
        ],
        "summary": "Get test plan environments",
        "description": "Retrieves all test environments configured for a Test Plan. These environments are used for planning and organizing test executions across different system configurations.",
        "operationId": "getTestPlanEnvironments",
        "responses": {
          "200": {
            "description": "Test plan environments successfully retrieved. Returns list of configured environments and their planning details."
          }
        }
      },
      "post": {
        "tags": [
          "test plan"
        ],
        "summary": "Configure test plan environments",
        "description": "Configures test environments for a Test Plan. These environments define the target configurations for planned test executions and help organize testing across different system setups.",
        "operationId": "configureTestPlanEnvironments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "environments": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Production"
                        },
                        "description": {
                          "type": "string",
                          "example": "Production environment testing"
                        }
                      },
                      "required": ["name"]
                    }
                  }
                },
                "required": ["environments"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Test plan environments successfully configured. Returns updated environment configuration."
          }
        }
      },
      "parameters": [
        {
          "name": "testPlanKey",
          "in": "path",
          "required": true,
          "description": "The key of the test plan issue",
          "schema": {
            "type": "string",
            "example": "PLAN-123"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/export/testplan/{testPlanKey}": {
      "get": {
        "tags": [
          "export"
        ],
        "summary": "Export test plan details",
        "description": "Exports comprehensive Test Plan information including associated tests, test environments, execution history, and planning details. Supports multiple export formats for reporting and integration purposes.",
        "operationId": "exportTestPlan",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "description": "Export format",
            "schema": {
              "type": "string",
              "enum": ["json", "xml", "excel"],
              "default": "json",
              "example": "json"
            }
          },
          {
            "name": "includeExecutions",
            "in": "query",
            "description": "Include execution history",
            "schema": {
              "type": "boolean",
              "default": true,
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Test plan successfully exported. Returns comprehensive test plan data in requested format."
          }
        }
      },
      "parameters": [
        {
          "name": "testPlanKey",
          "in": "path",
          "required": true,
          "description": "The key of the test plan issue",
          "schema": {
            "type": "string",
            "example": "PLAN-123"
          }
        }
      ]
    },
    "/rest/raven/2.0/api/export/testexecution/{testExecutionKey}": {
      "get": {
        "tags": [
          "export"
        ],
        "summary": "Export test execution results",
        "description": "Exports comprehensive Test Execution results including all test runs, step results, evidence attachments, defect associations, and execution metrics. Ideal for reporting and integration with external systems.",
        "operationId": "exportTestExecution",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "description": "Export format",
            "schema": {
              "type": "string",
              "enum": ["json", "xml", "excel", "junit", "testng"],
              "default": "json",
              "example": "json"
            }
          },
          {
            "name": "includeEvidence",
            "in": "query",
            "description": "Include evidence attachments",
            "schema": {
              "type": "boolean",
              "default": false,
              "example": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Test execution successfully exported. Returns comprehensive execution results in requested format."
          }
        }
      },
      "parameters": [
        {
          "name": "testExecutionKey",
          "in": "path",
          "required": true,
          "description": "The key of the test execution issue",
          "schema": {
            "type": "string",
            "example": "EXEC-123"
          }
        }
      ]
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    { "name": "test" },
    { "name": "dataset"},
    { "name": "test execution" },
    { "name": "test plan"},
    { "name": "test set" },
    { "name": "precondition" },
    { "name": "test repository" },
    { "name": "test run" },
    { "name": "import" },
    { "name": "export" },
    { "name": "requirements" },
    { "name": "settings" },
    { "name": "test step" }
  ]
}
